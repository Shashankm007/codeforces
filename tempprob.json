[
    {
        "contestId": 1365,
        "index": "E",
        "name": "Maximum Subsequence Value",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1365,
        "index": "D",
        "name": "Solve The Maze",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "implementation",
            "shortest paths"
        ]
    },
    {
        "contestId": 1363,
        "index": "C",
        "name": "Game On Leaves",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "games",
            "trees"
        ]
    },
    {
        "contestId": 1361,
        "index": "B",
        "name": "Johnny and Grandmaster",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "greedy",
            "implementation",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 1361,
        "index": "A",
        "name": "Johnny and Contribution",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1360,
        "index": "G",
        "name": "A/B Matrix",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1360,
        "index": "F",
        "name": "Spy-string",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "dp",
            "hashing",
            "strings"
        ]
    },
    {
        "contestId": 1359,
        "index": "C",
        "name": "Mixing Water",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 1358,
        "index": "D",
        "name": "The Best Vacation",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 1358,
        "index": "C",
        "name": "Celex Update",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 1355,
        "index": "C",
        "name": "Count Triangles",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1800,
        "tags": [
            "binary search",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    {
        "contestId": 1354,
        "index": "D",
        "name": "Multiset",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    {
        "contestId": 1353,
        "index": "E",
        "name": "K-periodic Garland",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    {
        "contestId": 1352,
        "index": "G",
        "name": "Special Permutation",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1349,
        "index": "A",
        "name": "Orac and LCM",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "data structures",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1348,
        "index": "D",
        "name": "Phoenix and Science",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1348,
        "index": "C",
        "name": "Phoenix and Distribution",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 1346,
        "index": "E",
        "name": "Magic Tricks",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special",
            "dp",
            "graphs"
        ]
    },
    {
        "contestId": 1346,
        "index": "D",
        "name": "Constructing the Dungeon",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 1346,
        "index": "C",
        "name": "Spring Cleaning",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1344,
        "index": "A",
        "name": "Hilbert's Hotel",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "math",
            "number theory",
            "sortings"
        ]
    },
    {
        "contestId": 1343,
        "index": "D",
        "name": "Constant Palindrome Sum",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "data structures",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 1342,
        "index": "D",
        "name": "Multiple Testcases",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 1342,
        "index": "C",
        "name": "Yet Another Counting Problem",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1340,
        "index": "B",
        "name": "Nastya and Scoreboard",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "dp",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 1338,
        "index": "B",
        "name": "Edge Weight Assignment",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "dfs and similar",
            "greedy",
            "math",
            "trees"
        ]
    },
    {
        "contestId": 1336,
        "index": "B",
        "name": "Xenia and Colorful Gems",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy",
            "math",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 1336,
        "index": "A",
        "name": "Linova and Kingdom",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    {
        "contestId": 1335,
        "index": "E2",
        "name": "Three Blocks Palindrome (hard version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 1334,
        "index": "D",
        "name": "Minimum Euler Cycle",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1334,
        "index": "C",
        "name": "Circle of Monsters",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1333,
        "index": "C",
        "name": "Eugene and an array",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 1332,
        "index": "D",
        "name": "Walk on Matrix",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 1329,
        "index": "B",
        "name": "Dreamoon Likes Sequences",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 1329,
        "index": "A",
        "name": "Dreamoon Likes Coloring",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1328,
        "index": "E",
        "name": "Tree Queries",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 1328,
        "index": "D",
        "name": "Carousel",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "dp",
            "graphs",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1327,
        "index": "E",
        "name": "Count The Blocks",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 1327,
        "index": "C",
        "name": "Game with Chips",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 1326,
        "index": "D2",
        "name": "Prefix-Suffix Palindrome (Hard version)",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "binary search",
            "greedy",
            "hashing",
            "string suffix structures",
            "strings"
        ]
    },
    {
        "contestId": 1325,
        "index": "D",
        "name": "Ehab the Xorcist",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "greedy",
            "number theory"
        ]
    },
    {
        "contestId": 1324,
        "index": "F",
        "name": "Maximum White Subtree",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 1324,
        "index": "E",
        "name": "Sleeping Schedule",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 1321,
        "index": "C",
        "name": "Remove Adjacent",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 1320,
        "index": "B",
        "name": "Navigation System",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 1316,
        "index": "C",
        "name": "Primitive Primes",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "math",
            "ternary search"
        ]
    },
    {
        "contestId": 1313,
        "index": "C2",
        "name": "Skyscrapers (hard version)",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 1313,
        "index": "B",
        "name": "Different Rules",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1312,
        "index": "D",
        "name": "Count the Arrays",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 1311,
        "index": "F",
        "name": "Moving Points",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "divide and conquer",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 1310,
        "index": "A",
        "name": "Recommendations",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1307,
        "index": "D",
        "name": "Cow and Fields",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    {
        "contestId": 1305,
        "index": "D",
        "name": "Kuroni and the Celebration",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "interactive",
            "trees"
        ]
    },
    {
        "contestId": 1305,
        "index": "C",
        "name": "Kuroni and Impossible Calculation",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "brute force",
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1304,
        "index": "D",
        "name": "Shortest and Longest LIS",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 1303,
        "index": "D",
        "name": "Fill The Bag",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "greedy"
        ]
    },
    {
        "contestId": 1303,
        "index": "C",
        "name": "Perfect Keyboard",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1301,
        "index": "C",
        "name": "Ayoub's function",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "binary search",
            "combinatorics",
            "greedy",
            "math",
            "strings"
        ]
    },
    {
        "contestId": 1299,
        "index": "B",
        "name": "Aerodynamic",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 1296,
        "index": "E1",
        "name": "String Coloring (easy version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "dp",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1295,
        "index": "D",
        "name": "Same GCDs",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1295,
        "index": "C",
        "name": "Obtain The String",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "dp",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 1295,
        "index": "B",
        "name": "Infinite Prefixes",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "math",
            "strings"
        ]
    },
    {
        "contestId": 1294,
        "index": "E",
        "name": "Obtain a Permutation",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1294,
        "index": "D",
        "name": "MEX maximizing",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "data structures",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1292,
        "index": "B",
        "name": "Aroma's Search",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1290,
        "index": "B",
        "name": "Irreducible Anagrams",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "strings",
            "two pointers"
        ]
    },
    {
        "contestId": 1290,
        "index": "A",
        "name": "Mind Control",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 1288,
        "index": "C",
        "name": "Two Arrays",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    {
        "contestId": 1286,
        "index": "B",
        "name": "Numbers on Tree",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 1286,
        "index": "A",
        "name": "Garland",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1285,
        "index": "D",
        "name": "Dr. Evil Underscores",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "divide and conquer",
            "dp",
            "greedy",
            "strings",
            "trees"
        ]
    },
    {
        "contestId": 1284,
        "index": "C",
        "name": "New Year and Permutation",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 1283,
        "index": "E",
        "name": "New Year Parties",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 1283,
        "index": "D",
        "name": "Christmas Trees",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    {
        "contestId": 1282,
        "index": "C",
        "name": "Petya and Exam",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 1282,
        "index": "B2",
        "name": "K for the Price of One (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dp",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1281,
        "index": "B",
        "name": "Azamon Web Services",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1280,
        "index": "B",
        "name": "Beingawesomeism",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1280,
        "index": "A",
        "name": "Cut and Paste",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1279,
        "index": "D",
        "name": "Santa's Bot",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 1278,
        "index": "C",
        "name": "Berry Jam",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1277,
        "index": "D",
        "name": "Let's Play the Words?",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "hashing",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1276,
        "index": "B",
        "name": "Two Fairs",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    {
        "contestId": 1272,
        "index": "E",
        "name": "Nearest Opposite Parity",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 1270,
        "index": "D",
        "name": "Strange Device",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "interactive",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 1268,
        "index": "A",
        "name": "Long Beautiful Integer",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 1267,
        "index": "L",
        "name": "Lexicography",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "strings"
        ]
    },
    {
        "contestId": 1267,
        "index": "J",
        "name": "Just Arrange the Icons",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1267,
        "index": "E",
        "name": "Elections",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1264,
        "index": "B",
        "name": "Beautiful Sequence",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 1260,
        "index": "D",
        "name": "A Game with Traps",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1260,
        "index": "C",
        "name": "Infinite Fence",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1257,
        "index": "D",
        "name": "Yet Another Monster Killing Problem",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 1256,
        "index": "C",
        "name": "Platforms Jumping",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1255,
        "index": "C",
        "name": "League of Leesins",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 1254,
        "index": "B1",
        "name": "Send Boxes to Alice (Easy Version)",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory",
            "ternary search",
            "two pointers"
        ]
    },
    {
        "contestId": 1254,
        "index": "A",
        "name": "Feeding Chicken",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1253,
        "index": "D",
        "name": "Harmonious Graph",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1252,
        "index": "H",
        "name": "Twin Buildings",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1252,
        "index": "C",
        "name": "Even Path",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 1251,
        "index": "D",
        "name": "Salary Changing",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1251,
        "index": "C",
        "name": "Minimize The Integer",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 1250,
        "index": "J",
        "name": "The Parade",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "greedy"
        ]
    },
    {
        "contestId": 1250,
        "index": "B",
        "name": "The Feast and the Bus",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1249,
        "index": "E",
        "name": "By Elevator or Stairs?",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dp",
            "shortest paths"
        ]
    },
    {
        "contestId": 1249,
        "index": "D2",
        "name": "Too Many Segments (hard version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1249,
        "index": "D1",
        "name": "Too Many Segments (easy version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1245,
        "index": "D",
        "name": "Shichikuji and Power Grid",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "dsu",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    {
        "contestId": 1244,
        "index": "D",
        "name": "Paint the Tree",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dp",
            "graphs",
            "implementation",
            "trees"
        ]
    },
    {
        "contestId": 1243,
        "index": "B2",
        "name": "Character Swap (Hard Version)",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1600,
        "tags": [
            "strings"
        ]
    },
    {
        "contestId": 1242,
        "index": "B",
        "name": "0-1 MST",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "sortings"
        ]
    },
    {
        "contestId": 1239,
        "index": "A",
        "name": "Ivan the Fool and the Probability Theory",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 1238,
        "index": "D",
        "name": "AB-string",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "strings"
        ]
    },
    {
        "contestId": 1238,
        "index": "C",
        "name": "Standard Free2play",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1237,
        "index": "C2",
        "name": "Balanced Removals (Harder)",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1900,
        "tags": [
            "binary search",
            "constructive algorithms",
            "divide and conquer",
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 1237,
        "index": "C1",
        "name": "Balanced Removals (Easier)",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy"
        ]
    },
    {
        "contestId": 1234,
        "index": "D",
        "name": "Distinct Characters Queries",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "data structures"
        ]
    },
    {
        "contestId": 1228,
        "index": "D",
        "name": "Complete Tripartite",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "brute force",
            "constructive algorithms",
            "graphs",
            "hashing",
            "implementation"
        ]
    },
    {
        "contestId": 1228,
        "index": "C",
        "name": "Primes and Multiplication",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1227,
        "index": "D2",
        "name": "Optimal Subsequences (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 1227,
        "index": "D1",
        "name": "Optimal Subsequences (Easy Version)",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 1227,
        "index": "C",
        "name": "Messy",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1225,
        "index": "D",
        "name": "Power Products",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "hashing",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1225,
        "index": "C",
        "name": "p-binary",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "bitmasks",
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 1223,
        "index": "C",
        "name": "Save the Nature",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy"
        ]
    },
    {
        "contestId": 1221,
        "index": "D",
        "name": "Make The Fence Great Again",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 1220,
        "index": "D",
        "name": "Alex and Julian",
        "type": "PROGRAMMING",
        "points": 2250,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1219,
        "index": "C",
        "name": "Periodic integer number",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 1217,
        "index": "C",
        "name": "The Number Of Good Substrings",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "bitmasks",
            "brute force"
        ]
    },
    {
        "contestId": 1217,
        "index": "B",
        "name": "Zmei Gorynich",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1216,
        "index": "E1",
        "name": "Numerical Sequence (easy version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 1216,
        "index": "C",
        "name": "White Sheet",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 1215,
        "index": "D",
        "name": "Ticket Game",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "games",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1214,
        "index": "D",
        "name": "Treasure Island",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "flows",
            "hashing"
        ]
    },
    {
        "contestId": 1213,
        "index": "G",
        "name": "Path Queries",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "divide and conquer",
            "dsu",
            "graphs",
            "sortings",
            "trees"
        ]
    },
    {
        "contestId": 1213,
        "index": "E",
        "name": "Two Small Strings",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1213,
        "index": "D2",
        "name": "Equalizing by Division (hard version)",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 1211,
        "index": "C",
        "name": "Ice Cream",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1210,
        "index": "B",
        "name": "Marcin and Training Camp",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 1210,
        "index": "A",
        "name": "Anadi and Domino",
        "type": "PROGRAMMING",
        "points": 250,
        "rating": 1700,
        "tags": [
            "brute force",
            "graphs"
        ]
    },
    {
        "contestId": 1209,
        "index": "D",
        "name": "Cow and Snacks",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    {
        "contestId": 1208,
        "index": "D",
        "name": "Restore Permutation",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1208,
        "index": "C",
        "name": "Magic Grid",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1207,
        "index": "E",
        "name": "XOR Guessing",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "interactive",
            "math"
        ]
    },
    {
        "contestId": 1207,
        "index": "D",
        "name": "Number Of Permutations",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "combinatorics"
        ]
    },
    {
        "contestId": 1205,
        "index": "B",
        "name": "Shortest Cycle",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "brute force",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 1204,
        "index": "C",
        "name": "Anna, Svyatoslav and Maps",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "dp",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    {
        "contestId": 1203,
        "index": "D2",
        "name": "Remove the Substring (hard version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 1203,
        "index": "D1",
        "name": "Remove the Substring (easy version)",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1202,
        "index": "D",
        "name": "Print a 1337-string...",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "math",
            "strings"
        ]
    },
    {
        "contestId": 1202,
        "index": "B",
        "name": "You Are Given a Decimal String...",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "dp",
            "shortest paths"
        ]
    },
    {
        "contestId": 1200,
        "index": "D",
        "name": "White Lines",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 1198,
        "index": "B",
        "name": "Welfare State",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "sortings"
        ]
    },
    {
        "contestId": 1198,
        "index": "A",
        "name": "MP3",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 1197,
        "index": "D",
        "name": "Yet Another Subarray Problem",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1196,
        "index": "E",
        "name": "Connected Component on a Chessboard",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 1196,
        "index": "D2",
        "name": "RGB Substring (hard version)",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 1195,
        "index": "D2",
        "name": "Submarine in the Rybinsk Sea (hard edition)",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1194,
        "index": "D",
        "name": "1-2-K Game",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "games",
            "math"
        ]
    },
    {
        "contestId": 1190,
        "index": "B",
        "name": "Tokitsukaze, CSL and Stone Game",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "games"
        ]
    },
    {
        "contestId": 1188,
        "index": "A1",
        "name": "Add on a Tree",
        "type": "PROGRAMMING",
        "points": 250,
        "rating": 1600,
        "tags": [
            "trees"
        ]
    },
    {
        "contestId": 1187,
        "index": "C",
        "name": "Vasya And Array",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1186,
        "index": "C",
        "name": "Vus the Cossack and Strings",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1185,
        "index": "D",
        "name": "Extra Element",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1185,
        "index": "C2",
        "name": "Exam in BerSU (hard version)",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "brute force",
            "data structures",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1184,
        "index": "E1",
        "name": "Daleks' Invasion (easy)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 1184,
        "index": "D1",
        "name": "Parallel Universes (Easy)",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 1184,
        "index": "C1",
        "name": "Heidi and the Turing Test (Easy)",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    {
        "contestId": 1182,
        "index": "C",
        "name": "Beautiful Lyrics",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "data structures",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 1181,
        "index": "C",
        "name": "Flag",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "combinatorics",
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 1179,
        "index": "B",
        "name": "Tolik and His Uncle",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1178,
        "index": "E",
        "name": "Archaeology",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 1177,
        "index": "B",
        "name": "Digits Sequence (Hard Edition)",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "binary search",
            "divide and conquer",
            "implementation"
        ]
    },
    {
        "contestId": 1176,
        "index": "E",
        "name": "Cover it!",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "shortest paths",
            "trees"
        ]
    },
    {
        "contestId": 1176,
        "index": "D",
        "name": "Recover it!",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "number theory",
            "sortings"
        ]
    },
    {
        "contestId": 1175,
        "index": "D",
        "name": "Array Splitting",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1175,
        "index": "C",
        "name": "Electrification",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 1175,
        "index": "B",
        "name": "Catch Overflow!",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "data structures",
            "expression parsing",
            "implementation"
        ]
    },
    {
        "contestId": 1174,
        "index": "D",
        "name": "Ehab and the Expected XOR Problem",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1172,
        "index": "B",
        "name": "Nauuo and Circle",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    {
        "contestId": 1172,
        "index": "A",
        "name": "Nauuo and Cards",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1168,
        "index": "B",
        "name": "Good Triple",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "two pointers"
        ]
    },
    {
        "contestId": 1168,
        "index": "A",
        "name": "Increasing by Modulo",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy"
        ]
    },
    {
        "contestId": 1165,
        "index": "E",
        "name": "Two Arrays and Sum of Functions",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 1165,
        "index": "D",
        "name": "Almost All Divisors",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1163,
        "index": "C2",
        "name": "Power Transmission (Hard Edition)",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1900,
        "tags": [
            "data structures",
            "geometry",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1163,
        "index": "C1",
        "name": "Power Transmission (Easy Edition)",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    {
        "contestId": 1163,
        "index": "B2",
        "name": "Cat Party (Hard Edition)",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 1157,
        "index": "E",
        "name": "Minimum Array",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1157,
        "index": "C2",
        "name": "Increasing Subsequence (hard version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1156,
        "index": "B",
        "name": "Ugly Pairs",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "greedy",
            "implementation",
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 1155,
        "index": "D",
        "name": "Beautiful Array",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 1154,
        "index": "E",
        "name": "Two Teams",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 1153,
        "index": "D",
        "name": "Serval and Rooted Tree",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "binary search",
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 1153,
        "index": "C",
        "name": "Serval and Parenthesis Sequence",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 1152,
        "index": "C",
        "name": "Neko does Maths",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1151,
        "index": "D",
        "name": "Stas and the Queue at the Buffet",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1600,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 1151,
        "index": "C",
        "name": "Problem for Nazar",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 1151,
        "index": "B",
        "name": "Dima and a Bad XOR",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1600,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "dp"
        ]
    },
    {
        "contestId": 1148,
        "index": "D",
        "name": "Dirty Deeds Done Dirt Cheap",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1148,
        "index": "C",
        "name": "Crazy Diamond",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "sortings"
        ]
    },
    {
        "contestId": 1148,
        "index": "B",
        "name": "Born This Way",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "two pointers"
        ]
    },
    {
        "contestId": 1147,
        "index": "B",
        "name": "Chladni Figure",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "strings"
        ]
    },
    {
        "contestId": 1146,
        "index": "C",
        "name": "Tree Diameter",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "graphs",
            "interactive"
        ]
    },
    {
        "contestId": 1144,
        "index": "F",
        "name": "Graph Without Long Directed Paths",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 1144,
        "index": "E",
        "name": "Median String",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "math",
            "number theory",
            "strings"
        ]
    },
    {
        "contestId": 1142,
        "index": "A",
        "name": "The Beatles",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 1141,
        "index": "G",
        "name": "Privatization of Roads in Treeland",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 1141,
        "index": "F2",
        "name": "Same Sum Blocks (Hard)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 1141,
        "index": "F1",
        "name": "Same Sum Blocks (Easy)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1141,
        "index": "E",
        "name": "Superhero Battle",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 1140,
        "index": "C",
        "name": "Playlist",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "data structures",
            "sortings"
        ]
    },
    {
        "contestId": 1138,
        "index": "B",
        "name": "Circus",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "brute force",
            "greedy",
            "math",
            "strings"
        ]
    },
    {
        "contestId": 1137,
        "index": "B",
        "name": "Camp Schedule",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1600,
        "tags": [
            "greedy",
            "hashing",
            "strings"
        ]
    },
    {
        "contestId": 1137,
        "index": "A",
        "name": "Skyscrapers",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 1136,
        "index": "D",
        "name": "Nastya Is Buying Lunch",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1133,
        "index": "F2",
        "name": "Spanning Tree with One Fixed Degree",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 1133,
        "index": "F1",
        "name": "Spanning Tree with Maximum Degree",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "graphs"
        ]
    },
    {
        "contestId": 1133,
        "index": "E",
        "name": "K Balanced Teams",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 1132,
        "index": "C",
        "name": "Painting the Fence",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force"
        ]
    },
    {
        "contestId": 1131,
        "index": "F",
        "name": "Asya And Kittens",
        "type": "PROGRAMMING",
        "points": 3000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dsu"
        ]
    },
    {
        "contestId": 1129,
        "index": "A2",
        "name": "Toy Train",
        "type": "PROGRAMMING",
        "points": 250,
        "rating": 1800,
        "tags": [
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 1129,
        "index": "A1",
        "name": "Toy Train (Simplified)",
        "type": "PROGRAMMING",
        "points": 250,
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 1121,
        "index": "C",
        "name": "System Testing",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 1120,
        "index": "A",
        "name": "Diana and Liana",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1900,
        "tags": [
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 1119,
        "index": "E",
        "name": "Pavel and Triangles",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "brute force",
            "dp",
            "fft",
            "greedy",
            "ternary search"
        ]
    },
    {
        "contestId": 1119,
        "index": "D",
        "name": "Frets On Fire",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "sortings"
        ]
    },
    {
        "contestId": 1118,
        "index": "F1",
        "name": "Tree Cutting (Easy Version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    {
        "contestId": 1118,
        "index": "E",
        "name": "Yet Another Ball Problem",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 1118,
        "index": "D2",
        "name": "Coffee and Coursework (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy"
        ]
    },
    {
        "contestId": 1118,
        "index": "D1",
        "name": "Coffee and Coursework (Easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 1118,
        "index": "C",
        "name": "Palindromic Matrix",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 1117,
        "index": "C",
        "name": "Magic Ship",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search"
        ]
    },
    {
        "contestId": 1115,
        "index": "U3",
        "name": "Block unitary",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 1115,
        "index": "U2",
        "name": "Chessboard unitary",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 1115,
        "index": "G3",
        "name": "Palindrome checker oracle",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 1115,
        "index": "G2",
        "name": "OR oracle",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 1114,
        "index": "D",
        "name": "Flood Fill",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 1114,
        "index": "C",
        "name": "Trailing Loves (or L'oeufs?)",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1111,
        "index": "C",
        "name": "Creative Snap",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "divide and conquer",
            "math"
        ]
    },
    {
        "contestId": 1111,
        "index": "B",
        "name": "Average Superhero Gang Power ",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1109,
        "index": "B",
        "name": "Sasha and One More Name",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "hashing",
            "strings"
        ]
    },
    {
        "contestId": 1109,
        "index": "A",
        "name": "Sasha and a Bit of Relax",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 1108,
        "index": "E1",
        "name": "Array and Segments (Easy version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1107,
        "index": "D",
        "name": "Compression",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1105,
        "index": "D",
        "name": "Kilani and the Game",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "shortest paths"
        ]
    },
    {
        "contestId": 1102,
        "index": "E",
        "name": "Monotonic Renumeration",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "combinatorics",
            "sortings"
        ]
    },
    {
        "contestId": 1098,
        "index": "A",
        "name": "Sum in the tree",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 1096,
        "index": "D",
        "name": "Easy Problem",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 1096,
        "index": "C",
        "name": "Polygon for the Angle",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    {
        "contestId": 1095,
        "index": "F",
        "name": "Make It Connected",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dsu",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 1095,
        "index": "E",
        "name": "Almost Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 1095,
        "index": "D",
        "name": "Circular Dance",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 1093,
        "index": "D",
        "name": "Beautiful Graph",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 1092,
        "index": "F",
        "name": "Tree with Maximum Cost",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    {
        "contestId": 1092,
        "index": "C",
        "name": "Prefixes and Suffixes",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "strings"
        ]
    },
    {
        "contestId": 1091,
        "index": "D",
        "name": "New Year and the Permutation Concatenation",
        "type": "PROGRAMMING",
        "points": 2250,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 1090,
        "index": "D",
        "name": "Similar Arrays",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1090,
        "index": "B",
        "name": "LaTeX Expert",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": []
    },
    {
        "contestId": 1089,
        "index": "F",
        "name": "Fractions",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 1089,
        "index": "E",
        "name": "Easy Chess",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 1085,
        "index": "D",
        "name": "Minimum Diameter Tree",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "implementation",
            "trees"
        ]
    },
    {
        "contestId": 1085,
        "index": "C",
        "name": "Connect Three",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1083,
        "index": "A",
        "name": "The Fair Nut and the Best Path",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    {
        "contestId": 1082,
        "index": "D",
        "name": "Maximum Diameter Graph",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 1082,
        "index": "C",
        "name": "Multi-Subject Competition",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1082,
        "index": "B",
        "name": "Vova and Trophies",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1081,
        "index": "E",
        "name": "Missing Numbers",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "binary search",
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1081,
        "index": "D",
        "name": "Maximum Distance",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dsu",
            "graphs",
            "shortest paths",
            "sortings"
        ]
    },
    {
        "contestId": 1077,
        "index": "F1",
        "name": "Pictures with Kittens (easy version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 1077,
        "index": "E",
        "name": "Thematic Contests",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1077,
        "index": "D",
        "name": "Cutting Out",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "binary search",
            "sortings"
        ]
    },
    {
        "contestId": 1076,
        "index": "E",
        "name": "Vasya and a Tree",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "trees"
        ]
    },
    {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    {
        "contestId": 1073,
        "index": "D",
        "name": "Berland Fair",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 1073,
        "index": "C",
        "name": "Vasya and Robot",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "two pointers"
        ]
    },
    {
        "contestId": 1068,
        "index": "C",
        "name": "Colored Rooks",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    {
        "contestId": 1067,
        "index": "B",
        "name": "Multihedgehog",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 1067,
        "index": "A",
        "name": "Array Without Local Maximums ",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 1066,
        "index": "E",
        "name": "Binary Numbers AND Sum",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1066,
        "index": "D",
        "name": "Boxes Packing",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "implementation"
        ]
    },
    {
        "contestId": 1065,
        "index": "C",
        "name": "Make It Equal",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1063,
        "index": "C",
        "name": "Dwarves, Hats and Extrasensory Abilities",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "constructive algorithms",
            "geometry",
            "interactive"
        ]
    },
    {
        "contestId": 1063,
        "index": "B",
        "name": "Labyrinth",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 1062,
        "index": "D",
        "name": "Fun with Integers",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1062,
        "index": "C",
        "name": "Banh-mi",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1061,
        "index": "C",
        "name": "Multiplicity",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1060,
        "index": "D",
        "name": "Social Circles",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1060,
        "index": "C",
        "name": "Maximum Subrectangle",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 1059,
        "index": "C",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 1056,
        "index": "D",
        "name": "Decorate Apple Tree",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "graphs",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    {
        "contestId": 1056,
        "index": "C",
        "name": "Pick Heroes",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "greedy",
            "implementation",
            "interactive",
            "sortings"
        ]
    },
    {
        "contestId": 1056,
        "index": "B",
        "name": "Divide Candies",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1055,
        "index": "C",
        "name": "Lucky Days",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 1054,
        "index": "D",
        "name": "Changing Array",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1051,
        "index": "D",
        "name": "Bicolorings",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    {
        "contestId": 1045,
        "index": "I",
        "name": "Palindrome Pairs",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "hashing",
            "strings"
        ]
    },
    {
        "contestId": 1044,
        "index": "B",
        "name": "Intersecting Subtrees",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "interactive",
            "trees"
        ]
    },
    {
        "contestId": 1044,
        "index": "A",
        "name": "The Tower is Going Home",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "binary search",
            "two pointers"
        ]
    },
    {
        "contestId": 1043,
        "index": "E",
        "name": "Train Hard, Win Easy",
        "type": "PROGRAMMING",
        "points": 2250,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 1043,
        "index": "D",
        "name": "Mysterious Crime",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "math",
            "meet-in-the-middle",
            "two pointers"
        ]
    },
    {
        "contestId": 1042,
        "index": "D",
        "name": "Petya and Array",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "data structures",
            "divide and conquer",
            "two pointers"
        ]
    },
    {
        "contestId": 1042,
        "index": "C",
        "name": "Array Product",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1041,
        "index": "E",
        "name": "Tree Reconstruction",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 1041,
        "index": "D",
        "name": "Glider",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "two pointers"
        ]
    },
    {
        "contestId": 1041,
        "index": "C",
        "name": "Coffee Break",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 1038,
        "index": "D",
        "name": "Slime",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 1037,
        "index": "D",
        "name": "Valid BFS?",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths",
            "trees"
        ]
    },
    {
        "contestId": 1036,
        "index": "D",
        "name": "Vasya and Arrays",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 1036,
        "index": "C",
        "name": "Classy Numbers",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    {
        "contestId": 1036,
        "index": "B",
        "name": "Diagonal Walking v.2",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 1034,
        "index": "A",
        "name": "Enlarge GCD",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1800,
        "tags": [
            "number theory"
        ]
    },
    {
        "contestId": 1033,
        "index": "C",
        "name": "Permutation Game",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "games"
        ]
    },
    {
        "contestId": 1032,
        "index": "D",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "geometry",
            "implementation"
        ]
    },
    {
        "contestId": 1032,
        "index": "C",
        "name": "Playing Piano",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dp"
        ]
    },
    {
        "contestId": 1031,
        "index": "D",
        "name": "Minimum path",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1031,
        "index": "C",
        "name": "Cram Time",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1030,
        "index": "D",
        "name": "Vasya and Triangle",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "geometry",
            "number theory"
        ]
    },
    {
        "contestId": 1029,
        "index": "D",
        "name": "Concatenated Multiples",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 1029,
        "index": "C",
        "name": "Maximal Intersection",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 1028,
        "index": "C",
        "name": "Rectangles",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "geometry",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 1027,
        "index": "D",
        "name": "Mouse Hunt",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 1027,
        "index": "C",
        "name": "Minimum Value Rectangle",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1025,
        "index": "C",
        "name": "Plasticine zebra",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 1025,
        "index": "B",
        "name": "Weakened Common Divisor",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force",
            "greedy",
            "number theory"
        ]
    },
    {
        "contestId": 1023,
        "index": "D",
        "name": "Array Restoration",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "data structures"
        ]
    },
    {
        "contestId": 1019,
        "index": "A",
        "name": "Elections",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 1017,
        "index": "D",
        "name": "The Wu",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "brute force",
            "data structures"
        ]
    },
    {
        "contestId": 1017,
        "index": "C",
        "name": "The Phone Number",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 1016,
        "index": "D",
        "name": "Vasya And The Matrix",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "flows",
            "math"
        ]
    },
    {
        "contestId": 1016,
        "index": "C",
        "name": "Vasya And The Mushrooms",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 1015,
        "index": "E2",
        "name": "Stars Drawing (Hard Edition)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 1015,
        "index": "E1",
        "name": "Stars Drawing (Easy Edition)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 1015,
        "index": "D",
        "name": "Walking Between Houses",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 1012,
        "index": "C",
        "name": "Hills",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 1012,
        "index": "B",
        "name": "Chemical table",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "matrices"
        ]
    },
    {
        "contestId": 1010,
        "index": "C",
        "name": "Border",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "number theory"
        ]
    },
    {
        "contestId": 1010,
        "index": "B",
        "name": "Rocket",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1800,
        "tags": [
            "binary search",
            "interactive"
        ]
    },
    {
        "contestId": 1009,
        "index": "D",
        "name": "Relatively Prime Graph",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "graphs",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1009,
        "index": "C",
        "name": "Annoying Present",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 1006,
        "index": "E",
        "name": "Military Problem",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 1006,
        "index": "D",
        "name": "Two Strings Swaps",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 1005,
        "index": "E1",
        "name": "Median on Segments (Permutations Edition)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "sortings"
        ]
    },
    {
        "contestId": 1003,
        "index": "D",
        "name": "Coins and Queries",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 1002,
        "index": "E2",
        "name": "Another array reconstruction algorithm",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": []
    },
    {
        "contestId": 1002,
        "index": "D3",
        "name": "Oracle for majority function",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 1002,
        "index": "C2",
        "name": "Distinguish zero state and plus state without errors",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 1002,
        "index": "C1",
        "name": "Distinguish zero state and plus state with minimum error",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": []
    },
    {
        "contestId": 1002,
        "index": "B4",
        "name": "Distinguish four 2-qubit states - 2",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": []
    },
    {
        "contestId": 1002,
        "index": "B3",
        "name": "Distinguish four 2-qubit states",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 1002,
        "index": "B2",
        "name": "Distinguish GHZ state and W state",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 1002,
        "index": "A4",
        "name": "Generate W state",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": []
    },
    {
        "contestId": 1001,
        "index": "I",
        "name": "Deutsch-Jozsa algorithm",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 1001,
        "index": "E",
        "name": "Distinguish Bell states",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 1000,
        "index": "D",
        "name": "Yet Another Problem On a Subsequence",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    {
        "contestId": 1000,
        "index": "C",
        "name": "Covered Points Count",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 999,
        "index": "D",
        "name": "Equalize the Remainders",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 993,
        "index": "B",
        "name": "Open Communication",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "brute force"
        ]
    },
    {
        "contestId": 993,
        "index": "A",
        "name": "Two Squares",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "geometry",
            "implementation"
        ]
    },
    {
        "contestId": 992,
        "index": "C",
        "name": "Nastya and a Wardrobe",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 992,
        "index": "B",
        "name": "Nastya Studies Informatics",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 991,
        "index": "E",
        "name": "Bus Number",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "brute force",
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 990,
        "index": "D",
        "name": "Graph And Its Complement",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 989,
        "index": "C",
        "name": "A Mist of Florescence",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    {
        "contestId": 988,
        "index": "D",
        "name": "Points and Powers of Two",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 986,
        "index": "B",
        "name": "Petr and Permutations",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 986,
        "index": "A",
        "name": "Fair",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "graphs",
            "greedy",
            "number theory",
            "shortest paths"
        ]
    },
    {
        "contestId": 983,
        "index": "B",
        "name": "XOR-pyramid",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 983,
        "index": "A",
        "name": "Finite or not?",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 982,
        "index": "D",
        "name": "Shark",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "brute force",
            "data structures",
            "dsu",
            "trees"
        ]
    },
    {
        "contestId": 981,
        "index": "D",
        "name": "Bookshelves",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 980,
        "index": "C",
        "name": "Posterized",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "games",
            "greedy"
        ]
    },
    {
        "contestId": 980,
        "index": "B",
        "name": "Marlin",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    {
        "contestId": 979,
        "index": "B",
        "name": "Treasure Hunt",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 978,
        "index": "G",
        "name": "Petya's Exams",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 977,
        "index": "F",
        "name": "Consecutive Subsequence",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 965,
        "index": "D",
        "name": "Single-use Stones",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "flows",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 963,
        "index": "A",
        "name": "Alternating Sum",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 962,
        "index": "D",
        "name": "Merge Equals",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 961,
        "index": "E",
        "name": "Tufurama",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures"
        ]
    },
    {
        "contestId": 960,
        "index": "C",
        "name": "Subsequence Counting",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 959,
        "index": "E",
        "name": "Mahmoud and Ehab and the xor-MST",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dp",
            "graphs",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 958,
        "index": "F2",
        "name": "Lightsabers (medium)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "two pointers"
        ]
    },
    {
        "contestId": 958,
        "index": "E1",
        "name": "Guard Duty (easy)",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 954,
        "index": "D",
        "name": "Fight Against Traffic",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 954,
        "index": "C",
        "name": "Matrix Walk",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 952,
        "index": "D",
        "name": "I'm Feeling Lucky!",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "probabilities"
        ]
    },
    {
        "contestId": 952,
        "index": "C",
        "name": "Ravioli Sort",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 952,
        "index": "B",
        "name": "A Map of the Cat",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "interactive"
        ]
    },
    {
        "contestId": 949,
        "index": "C",
        "name": "Data Center Maintenance",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 949,
        "index": "B",
        "name": "A Leapfrog in the Array",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 949,
        "index": "A",
        "name": "Zebras",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 946,
        "index": "D",
        "name": "Timetable",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 940,
        "index": "D",
        "name": "Alena And The Heater",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "implementation"
        ]
    },
    {
        "contestId": 939,
        "index": "E",
        "name": "Maximize!",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1800,
        "tags": [
            "binary search",
            "greedy",
            "ternary search",
            "two pointers"
        ]
    },
    {
        "contestId": 939,
        "index": "D",
        "name": "Love Rescue",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 939,
        "index": "C",
        "name": "Convenient For Everybody",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "two pointers"
        ]
    },
    {
        "contestId": 938,
        "index": "C",
        "name": "Constructing Tests",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 936,
        "index": "A",
        "name": "Save Energy!",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "binary search",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 935,
        "index": "D",
        "name": "Fafa and Ancient Alphabet",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1900,
        "tags": [
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 935,
        "index": "C",
        "name": "Fifa and Fafa",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 933,
        "index": "A",
        "name": "A Twisty Movement",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 932,
        "index": "C",
        "name": "Permutation Cycle",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 931,
        "index": "C",
        "name": "Laboratory Work",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 930,
        "index": "C",
        "name": "Teodor is not a liar!",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "dp"
        ]
    },
    {
        "contestId": 930,
        "index": "B",
        "name": "Game with String",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation",
            "probabilities",
            "strings"
        ]
    },
    {
        "contestId": 929,
        "index": "C",
        "name": "Красивая команда",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "*special",
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 928,
        "index": "D",
        "name": "Autocompletion",
        "type": "PROGRAMMING",
        "points": 2250,
        "rating": 1900,
        "tags": [
            "*special",
            "strings",
            "trees"
        ]
    },
    {
        "contestId": 928,
        "index": "C",
        "name": "Dependency management",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "*special",
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 926,
        "index": "I",
        "name": "A Vital Problem",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": []
    },
    {
        "contestId": 926,
        "index": "E",
        "name": "Merge Equal Elements",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures"
        ]
    },
    {
        "contestId": 926,
        "index": "D",
        "name": "Choose Place",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 926,
        "index": "C",
        "name": "Is This a Zebra?",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": []
    },
    {
        "contestId": 926,
        "index": "B",
        "name": "Add Points",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 925,
        "index": "B",
        "name": "Resource Distribution",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "binary search",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 925,
        "index": "A",
        "name": "Stairs and Elevators",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "binary search"
        ]
    },
    {
        "contestId": 924,
        "index": "C",
        "name": "Riverside Curio",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1700,
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 924,
        "index": "B",
        "name": "Three-level Laser",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 923,
        "index": "C",
        "name": "Perfect Security",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "data structures",
            "greedy",
            "strings",
            "trees"
        ]
    },
    {
        "contestId": 923,
        "index": "B",
        "name": "Producing Snow",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    {
        "contestId": 923,
        "index": "A",
        "name": "Primal Sport",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 922,
        "index": "D",
        "name": "Robot Vacuum Cleaner",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 922,
        "index": "C",
        "name": "Cave Painting",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "brute force",
            "number theory"
        ]
    },
    {
        "contestId": 919,
        "index": "D",
        "name": "Substring",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs"
        ]
    },
    {
        "contestId": 917,
        "index": "B",
        "name": "MADMAX",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dp",
            "games",
            "graphs"
        ]
    },
    {
        "contestId": 917,
        "index": "A",
        "name": "The Monster",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 916,
        "index": "C",
        "name": "Jamie and Interesting Graph",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 915,
        "index": "C",
        "name": "Permute Digits",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 914,
        "index": "D",
        "name": "Bash and a Tough Math Puzzle",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "data structures",
            "number theory"
        ]
    },
    {
        "contestId": 914,
        "index": "C",
        "name": "Travelling Salesman and Special Numbers",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force",
            "combinatorics",
            "dp"
        ]
    },
    {
        "contestId": 913,
        "index": "D",
        "name": "Too Easy Problems",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1800,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 913,
        "index": "C",
        "name": "Party Lemonade",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "bitmasks",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 911,
        "index": "D",
        "name": "Inversion Counting",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 910,
        "index": "B",
        "name": "Door Frames",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 909,
        "index": "E",
        "name": "Coprocessor",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 909,
        "index": "C",
        "name": "Python Indentation",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 906,
        "index": "A",
        "name": "Shockers",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 900,
        "index": "C",
        "name": "Remove Extra One",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "data structures",
            "math"
        ]
    },
    {
        "contestId": 899,
        "index": "D",
        "name": "Shovel Sale",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 898,
        "index": "E",
        "name": "Squares and not squares",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 898,
        "index": "D",
        "name": "Alarm Clock",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 896,
        "index": "A",
        "name": "Nephren gives a riddle",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "binary search",
            "dfs and similar"
        ]
    },
    {
        "contestId": 895,
        "index": "B",
        "name": "XK Segments",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "binary search",
            "math",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 894,
        "index": "C",
        "name": "Marco and GCD Sequence",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 894,
        "index": "B",
        "name": "Ralph And His Magic Field",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 888,
        "index": "E",
        "name": "Maximum Subsequence",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "bitmasks",
            "divide and conquer",
            "meet-in-the-middle"
        ]
    },
    {
        "contestId": 888,
        "index": "D",
        "name": "Almost Identity Permutations",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 883,
        "index": "K",
        "name": "Road Widening",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 883,
        "index": "I",
        "name": "Photo Processing",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "dp"
        ]
    },
    {
        "contestId": 883,
        "index": "H",
        "name": "Palindromic Cut",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 883,
        "index": "G",
        "name": "Orientation of Edges",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 878,
        "index": "A",
        "name": "Short Program",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "bitmasks",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 877,
        "index": "C",
        "name": "Slava and tanks",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 873,
        "index": "D",
        "name": "Merge Sort",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "divide and conquer"
        ]
    },
    {
        "contestId": 873,
        "index": "C",
        "name": "Strange Game On Matrix",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 869,
        "index": "C",
        "name": "The Intriguing Obsession",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 865,
        "index": "B",
        "name": "Ordering Pizza",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "sortings",
            "ternary search"
        ]
    },
    {
        "contestId": 863,
        "index": "D",
        "name": "Yet Another Array Queries Problem",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 863,
        "index": "C",
        "name": "1-2-3",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 862,
        "index": "C",
        "name": "Mahmoud and Ehab and the xor",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 858,
        "index": "D",
        "name": "Polycarp's phone book",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "data structures",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 856,
        "index": "A",
        "name": "Set Theory",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 853,
        "index": "B",
        "name": "Jury Meeting",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 852,
        "index": "G",
        "name": "Bathroom terminal",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 850,
        "index": "A",
        "name": "Five Dimensional Points",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 849,
        "index": "B",
        "name": "Tell Your World",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    {
        "contestId": 848,
        "index": "B",
        "name": "Rooter's Song",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "geometry",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 848,
        "index": "A",
        "name": "From Y to Y",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 847,
        "index": "K",
        "name": "Travel Cards",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 847,
        "index": "I",
        "name": "Noise Level",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 847,
        "index": "H",
        "name": "Load Testing",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 847,
        "index": "E",
        "name": "Packmen",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp"
        ]
    },
    {
        "contestId": 847,
        "index": "C",
        "name": "Sum of Nestings",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 847,
        "index": "B",
        "name": "Preparing for Merge Sort",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    {
        "contestId": 846,
        "index": "F",
        "name": "Random Query",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "math",
            "probabilities",
            "two pointers"
        ]
    },
    {
        "contestId": 846,
        "index": "D",
        "name": "Monitor",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    {
        "contestId": 846,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "data structures",
            "dp"
        ]
    },
    {
        "contestId": 846,
        "index": "B",
        "name": "Math Show",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 845,
        "index": "D",
        "name": "Driving Test",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 845,
        "index": "B",
        "name": "Luba And The Ticket",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 839,
        "index": "B",
        "name": "Game of the Rows",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 837,
        "index": "B",
        "name": "Flag of Berland",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 835,
        "index": "D",
        "name": "Palindromic characteristics",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "dp",
            "hashing",
            "strings"
        ]
    },
    {
        "contestId": 835,
        "index": "C",
        "name": "Star sky",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 833,
        "index": "A",
        "name": "The Meaningless Game",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 832,
        "index": "D",
        "name": "Misha, Grisha and Underground",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 832,
        "index": "B",
        "name": "Petya and Exam",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 831,
        "index": "C",
        "name": "Jury Marks",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 830,
        "index": "B",
        "name": "Cards Sorting",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "data structures",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 830,
        "index": "A",
        "name": "Office Keys",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "binary search",
            "brute force",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    {
        "contestId": 827,
        "index": "A",
        "name": "String Reconstruction",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "data structures",
            "greedy",
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 825,
        "index": "C",
        "name": "Multi-judge Solving",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 825,
        "index": "B",
        "name": "Five-In-a-Row",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 822,
        "index": "D",
        "name": "My pretty girl Noora",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 822,
        "index": "C",
        "name": "Hacker, pack your bags!",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 819,
        "index": "B",
        "name": "Mister B and PR Shifts",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "data structures",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory",
            "two pointers"
        ]
    },
    {
        "contestId": 818,
        "index": "D",
        "name": "Multicolored Cars",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 818,
        "index": "B",
        "name": "Permutation Game",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 817,
        "index": "D",
        "name": "Imbalanced Array",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "divide and conquer",
            "dsu",
            "sortings"
        ]
    },
    {
        "contestId": 817,
        "index": "C",
        "name": "Really Big Numbers",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 815,
        "index": "A",
        "name": "Karen and Game",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 814,
        "index": "C",
        "name": "An impassioned circulation of affection",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "strings",
            "two pointers"
        ]
    },
    {
        "contestId": 813,
        "index": "C",
        "name": "The Tag Game",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 813,
        "index": "B",
        "name": "The Golden Age",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 812,
        "index": "B",
        "name": "Sagheer, the Hausmeister",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "bitmasks",
            "brute force",
            "dp"
        ]
    },
    {
        "contestId": 811,
        "index": "C",
        "name": "Vladik and Memorable Trip",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 808,
        "index": "D",
        "name": "Array Division",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 803,
        "index": "D",
        "name": "Magazine Ad",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "greedy"
        ]
    },
    {
        "contestId": 803,
        "index": "C",
        "name": "Maximal GCD",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 802,
        "index": "B",
        "name": "Heidi and Library (medium)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 802,
        "index": "A",
        "name": "Heidi and Library (easy)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 799,
        "index": "C",
        "name": "Fountains",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "binary search",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 798,
        "index": "C",
        "name": "Mike and gcd problem",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    {
        "contestId": 797,
        "index": "C",
        "name": "Minimal string",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 796,
        "index": "C",
        "name": "Bank Hacking",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dp",
            "trees"
        ]
    },
    {
        "contestId": 794,
        "index": "C",
        "name": "Naming Company",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1800,
        "tags": [
            "games",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 793,
        "index": "B",
        "name": "Igor and his way to work",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "shortest paths"
        ]
    },
    {
        "contestId": 792,
        "index": "D",
        "name": "Paths in a Complete Binary Tree",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "trees"
        ]
    },
    {
        "contestId": 789,
        "index": "B",
        "name": "Masha and geometric depression",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 788,
        "index": "A",
        "name": "Functions again",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 785,
        "index": "C",
        "name": "Anton and Fairy Tale",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 784,
        "index": "F",
        "name": "Crunching Numbers Just for You",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 784,
        "index": "D",
        "name": "Touchy-Feely Palindromes",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 784,
        "index": "C",
        "name": "INTERCALC",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 784,
        "index": "A",
        "name": "Numbers Joke",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 780,
        "index": "D",
        "name": "Innokenty and a Football League",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "2-sat",
            "graphs",
            "greedy",
            "implementation",
            "shortest paths",
            "strings"
        ]
    },
    {
        "contestId": 780,
        "index": "C",
        "name": "Andryusha and Colored Balloons",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 780,
        "index": "B",
        "name": "The Meeting Place Cannot Be Changed",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search"
        ]
    },
    {
        "contestId": 778,
        "index": "B",
        "name": "Bitwise Formula",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "expression parsing",
            "implementation"
        ]
    },
    {
        "contestId": 778,
        "index": "A",
        "name": "String Game",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 777,
        "index": "D",
        "name": "Cloud of Hashtags",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "greedy",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 777,
        "index": "C",
        "name": "Alyona and Spreadsheet",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 776,
        "index": "C",
        "name": "Molly's Chemicals",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 774,
        "index": "K",
        "name": "Stepan and Vowels",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 773,
        "index": "A",
        "name": "Success Rate",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 772,
        "index": "B",
        "name": "Volatile Kite",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 772,
        "index": "A",
        "name": "Voltage Keepsake",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 769,
        "index": "D",
        "name": "k-Interesting Pairs Of Integers",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "*special",
            "bitmasks",
            "brute force",
            "meet-in-the-middle"
        ]
    },
    {
        "contestId": 769,
        "index": "C",
        "name": "Cycle In Maze",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "*special",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    {
        "contestId": 768,
        "index": "C",
        "name": "Jon Snow and his Favourite Number",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1800,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 768,
        "index": "B",
        "name": "Code For 1",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "divide and conquer"
        ]
    },
    {
        "contestId": 766,
        "index": "C",
        "name": "Mahmoud and a Message",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 765,
        "index": "D",
        "name": "Artsem and Saunders",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dsu",
            "math"
        ]
    },
    {
        "contestId": 763,
        "index": "A",
        "name": "Timofey and a tree",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "graphs",
            "implementation",
            "trees"
        ]
    },
    {
        "contestId": 761,
        "index": "D",
        "name": "Dasha and Very Difficult Problem",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "constructive algorithms",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 757,
        "index": "C",
        "name": "Felicity is Coming!",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "hashing",
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 756,
        "index": "B",
        "name": "Travel Card",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "dp"
        ]
    },
    {
        "contestId": 756,
        "index": "A",
        "name": "Pavel and barbecue",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dfs and similar"
        ]
    },
    {
        "contestId": 753,
        "index": "B",
        "name": "Interactive Bulls and Cows (Easy)",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 750,
        "index": "D",
        "name": "New Year and Fireworks",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 750,
        "index": "C",
        "name": "New Year and Rating",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 747,
        "index": "E",
        "name": "Comments",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "expression parsing",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 747,
        "index": "D",
        "name": "Winter Is Coming",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 746,
        "index": "E",
        "name": "Numbers Exchange",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 746,
        "index": "C",
        "name": "Tram",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 744,
        "index": "B",
        "name": "Hongcow's Game",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "divide and conquer",
            "interactive"
        ]
    },
    {
        "contestId": 743,
        "index": "D",
        "name": "Chloe and pleasant prizes",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 741,
        "index": "B",
        "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "dsu"
        ]
    },
    {
        "contestId": 741,
        "index": "A",
        "name": "Arpa's loud Owf and Mehrdad's evil plan",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "math"
        ]
    },
    {
        "contestId": 739,
        "index": "B",
        "name": "Alyona and a tree",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 739,
        "index": "A",
        "name": "Alyona and mex",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 735,
        "index": "D",
        "name": "Taxes",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 735,
        "index": "C",
        "name": "Tennis Championship",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 734,
        "index": "D",
        "name": "Anton and Chess",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 734,
        "index": "C",
        "name": "Anton and Making Potions",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 733,
        "index": "D",
        "name": "Kostya the Sculptor",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "data structures",
            "hashing"
        ]
    },
    {
        "contestId": 733,
        "index": "C",
        "name": "Epidemic in Monstropolis",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 732,
        "index": "D",
        "name": "Exams",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 731,
        "index": "F",
        "name": "Video Cards",
        "type": "PROGRAMMING",
        "points": 3000,
        "rating": 1900,
        "tags": [
            "brute force",
            "data structures",
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 731,
        "index": "C",
        "name": "Socks",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 730,
        "index": "J",
        "name": "Bottles",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 730,
        "index": "G",
        "name": "Car Repair Shop",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 730,
        "index": "B",
        "name": "Minimum and Maximum",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "interactive"
        ]
    },
    {
        "contestId": 730,
        "index": "A",
        "name": "Toda 2",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 729,
        "index": "E",
        "name": "Subordinates",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 729,
        "index": "D",
        "name": "Sea Battle",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 729,
        "index": "C",
        "name": "Road to Cinema",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 727,
        "index": "D",
        "name": "T-shirts Distribution",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "flows",
            "greedy"
        ]
    },
    {
        "contestId": 727,
        "index": "B",
        "name": "Bill Total Value",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "expression parsing",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 725,
        "index": "D",
        "name": "Contest Balloons",
        "type": "PROGRAMMING",
        "points": 2250,
        "rating": 1800,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 725,
        "index": "C",
        "name": "Hidden Word",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 724,
        "index": "D",
        "name": "Dense Subsequence",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 724,
        "index": "C",
        "name": "Ray Tracing",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "greedy",
            "hashing",
            "implementation",
            "math",
            "number theory",
            "sortings"
        ]
    },
    {
        "contestId": 723,
        "index": "D",
        "name": "Lakes in Berland",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 723,
        "index": "C",
        "name": "Polycarp at the Radio",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 722,
        "index": "D",
        "name": "Generating Sets",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "greedy",
            "strings",
            "trees"
        ]
    },
    {
        "contestId": 722,
        "index": "C",
        "name": "Destroying Array",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "data structures",
            "dsu"
        ]
    },
    {
        "contestId": 721,
        "index": "C",
        "name": "Journey",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dp",
            "graphs"
        ]
    },
    {
        "contestId": 718,
        "index": "A",
        "name": "Efim and Strange Grade",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "dp",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 717,
        "index": "E",
        "name": "Paint it really, really dark gray",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dfs and similar"
        ]
    },
    {
        "contestId": 717,
        "index": "D",
        "name": "Dexterina’s Lab",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "games",
            "matrices",
            "probabilities"
        ]
    },
    {
        "contestId": 715,
        "index": "A",
        "name": "Plus and Square Root",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 712,
        "index": "C",
        "name": "Memory and De-Evolution",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 711,
        "index": "D",
        "name": "Directed Roads",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "graphs",
            "math"
        ]
    },
    {
        "contestId": 711,
        "index": "C",
        "name": "Coloring Trees",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 708,
        "index": "B",
        "name": "Recover the String",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 706,
        "index": "D",
        "name": "Vasiliy's Multiset",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "bitmasks",
            "data structures",
            "trees"
        ]
    },
    {
        "contestId": 706,
        "index": "C",
        "name": "Hard problem",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "dp",
            "strings"
        ]
    },
    {
        "contestId": 704,
        "index": "A",
        "name": "Thor",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 702,
        "index": "D",
        "name": "Road to Post Office",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 700,
        "index": "B",
        "name": "Connecting Universities",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 700,
        "index": "A",
        "name": "As Fast As Possible",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1900,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 698,
        "index": "B",
        "name": "Fix a Tree",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 696,
        "index": "B",
        "name": "Puzzles",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "math",
            "probabilities",
            "trees"
        ]
    },
    {
        "contestId": 691,
        "index": "E",
        "name": "Xor-sequences",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "matrices"
        ]
    },
    {
        "contestId": 691,
        "index": "D",
        "name": "Swaps in Permutation",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dsu",
            "math"
        ]
    },
    {
        "contestId": 691,
        "index": "C",
        "name": "Exponential notation",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 691,
        "index": "B",
        "name": "s-palindrome",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 690,
        "index": "E1",
        "name": "Photographs (I)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 690,
        "index": "D2",
        "name": "The Wall (medium)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "combinatorics"
        ]
    },
    {
        "contestId": 690,
        "index": "B1",
        "name": "Recover Polygon (easy)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": []
    },
    {
        "contestId": 689,
        "index": "C",
        "name": "Mike and Chocolate Thieves",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 689,
        "index": "B",
        "name": "Mike and Shortcuts",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    {
        "contestId": 687,
        "index": "C",
        "name": "The Values You Can Make",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 687,
        "index": "B",
        "name": "Remainders Game",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "chinese remainder theorem",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 685,
        "index": "B",
        "name": "Kay and Snowflake",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    {
        "contestId": 685,
        "index": "A",
        "name": "Robbers' watch",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 683,
        "index": "H",
        "name": "Exchange of Books",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 683,
        "index": "G",
        "name": "The Fraction",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 683,
        "index": "F",
        "name": "Reformat the String",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 683,
        "index": "E",
        "name": "Hammer throwing",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 683,
        "index": "C",
        "name": "Symmetric Difference",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 683,
        "index": "B",
        "name": "The Teacher of Physical Education",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 682,
        "index": "D",
        "name": "Alyona and Strings",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    {
        "contestId": 682,
        "index": "C",
        "name": "Alyona and the Tree",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 681,
        "index": "C",
        "name": "Heap Operations",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 678,
        "index": "D",
        "name": "Iterated Linear Function",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 678,
        "index": "C",
        "name": "Joty and Chocolate",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 678,
        "index": "B",
        "name": "The Same Calendar",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 675,
        "index": "D",
        "name": "Дерево",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "data structures",
            "trees"
        ]
    },
    {
        "contestId": 671,
        "index": "A",
        "name": "Recycling Bottles",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "dp",
            "geometry",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 670,
        "index": "E",
        "name": "Correct Bracket Sequence Editor",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "data structures",
            "dsu",
            "strings"
        ]
    },
    {
        "contestId": 666,
        "index": "A",
        "name": "Reberland Linguistics",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "dp",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 665,
        "index": "D",
        "name": "Simple Subset",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "number theory"
        ]
    },
    {
        "contestId": 665,
        "index": "A",
        "name": "Buses Between Cities",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 663,
        "index": "A",
        "name": "Rebus",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "expression parsing",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 661,
        "index": "F",
        "name": "Primes in Interval",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 661,
        "index": "B",
        "name": "Seasons",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 660,
        "index": "D",
        "name": "Number of Parallelograms",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 660,
        "index": "C",
        "name": "Hard Process",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 659,
        "index": "E",
        "name": "New Reform",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 656,
        "index": "G",
        "name": "You're a Professional",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 656,
        "index": "F",
        "name": "Ace It!",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 656,
        "index": "B",
        "name": "Scrambled",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 656,
        "index": "A",
        "name": "Da Vinci Powers",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 653,
        "index": "C",
        "name": "Bear and Up-Down",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 652,
        "index": "D",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "sortings"
        ]
    },
    {
        "contestId": 652,
        "index": "C",
        "name": "Foe Pairs",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "combinatorics",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 650,
        "index": "B",
        "name": "Image Preview",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "brute force",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 645,
        "index": "D",
        "name": "Robot Rapping Results Report",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "graphs"
        ]
    },
    {
        "contestId": 645,
        "index": "C",
        "name": "Enduring Exodus",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "two pointers"
        ]
    },
    {
        "contestId": 644,
        "index": "B",
        "name": "Processing Queries",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "*special",
            "constructive algorithms",
            "data structures",
            "two pointers"
        ]
    },
    {
        "contestId": 643,
        "index": "B",
        "name": "Bear and Two Paths",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    {
        "contestId": 641,
        "index": "C",
        "name": "Little Artem and Dance",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 639,
        "index": "B",
        "name": "Bear and Forgotten Tree 3",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 638,
        "index": "D",
        "name": "Three-dimensional Turtle Super Computer ",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 638,
        "index": "C",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "*special",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 637,
        "index": "D",
        "name": "Running with Obstacles",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "*special",
            "data structures",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 633,
        "index": "C",
        "name": "Spy Syndrome 2",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "hashing",
            "implementation",
            "sortings",
            "string suffix structures",
            "strings"
        ]
    },
    {
        "contestId": 632,
        "index": "C",
        "name": "The Smallest String Concatenation",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 631,
        "index": "C",
        "name": "Report",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "data structures",
            "sortings"
        ]
    },
    {
        "contestId": 630,
        "index": "Q",
        "name": "Pyramids",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 630,
        "index": "M",
        "name": "Turn",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 630,
        "index": "I",
        "name": "Parking Lot",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 630,
        "index": "G",
        "name": "Challenge Pennants",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 630,
        "index": "E",
        "name": "A rectangle",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 627,
        "index": "B",
        "name": "Factory Repairs",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "data structures"
        ]
    },
    {
        "contestId": 627,
        "index": "A",
        "name": "XOR Equation",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "dp",
            "math"
        ]
    },
    {
        "contestId": 626,
        "index": "D",
        "name": "Jerry's Protest",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force",
            "combinatorics",
            "dp",
            "probabilities"
        ]
    },
    {
        "contestId": 626,
        "index": "C",
        "name": "Block Towers",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force",
            "greedy",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 625,
        "index": "A",
        "name": "Guest From the Past",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 623,
        "index": "A",
        "name": "Graph and String",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    {
        "contestId": 622,
        "index": "D",
        "name": "Optimal Number Permutation",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 622,
        "index": "C",
        "name": "Not Equal on a Segment",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 621,
        "index": "C",
        "name": "Wet Shark and Flowers",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math",
            "number theory",
            "probabilities"
        ]
    },
    {
        "contestId": 618,
        "index": "C",
        "name": "Constellation",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "geometry",
            "implementation"
        ]
    },
    {
        "contestId": 617,
        "index": "D",
        "name": "Polyline",
        "type": "PROGRAMMING",
        "points": 1750,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 617,
        "index": "C",
        "name": "Watering Flowers",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 616,
        "index": "D",
        "name": "Longest k-Good Segment",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "binary search",
            "data structures",
            "two pointers"
        ]
    },
    {
        "contestId": 616,
        "index": "C",
        "name": "The Labyrinth",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "dfs and similar"
        ]
    },
    {
        "contestId": 615,
        "index": "B",
        "name": "Longtail Hedgehog",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1600,
        "tags": [
            "dp",
            "graphs"
        ]
    },
    {
        "contestId": 613,
        "index": "B",
        "name": "Skills",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "binary search",
            "brute force",
            "dp",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 613,
        "index": "A",
        "name": "Peter and Snow Blower",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1900,
        "tags": [
            "binary search",
            "geometry",
            "ternary search"
        ]
    },
    {
        "contestId": 612,
        "index": "D",
        "name": "The Union of k-Segments",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 610,
        "index": "C",
        "name": "Harmony Analysis",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 607,
        "index": "B",
        "name": "Zuma",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 607,
        "index": "A",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "binary search",
            "dp"
        ]
    },
    {
        "contestId": 606,
        "index": "B",
        "name": "Testing Robots",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 605,
        "index": "B",
        "name": "Lazy Student",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "data structures",
            "graphs"
        ]
    },
    {
        "contestId": 605,
        "index": "A",
        "name": "Sorting Railway Cars",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 603,
        "index": "B",
        "name": "Moodular Arithmetic",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "dsu",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 603,
        "index": "A",
        "name": "Alternative Thinking",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 601,
        "index": "A",
        "name": "The Two Routes",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 600,
        "index": "C",
        "name": "Make Palindrome",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 600,
        "index": "A",
        "name": "Extract Numbers",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 599,
        "index": "D",
        "name": "Spongebob and Squares",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 599,
        "index": "C",
        "name": "Day at the Beach",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "sortings"
        ]
    },
    {
        "contestId": 598,
        "index": "D",
        "name": "Igor In the Museum",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 597,
        "index": "C",
        "name": "Subsequences",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "dp"
        ]
    },
    {
        "contestId": 597,
        "index": "B",
        "name": "Restaurant",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dp",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 597,
        "index": "A",
        "name": "Divisibility",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 596,
        "index": "C",
        "name": "Wilbur and Points",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 595,
        "index": "B",
        "name": "Pasha and Phone",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 593,
        "index": "B",
        "name": "Anton and Lines",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "geometry",
            "sortings"
        ]
    },
    {
        "contestId": 592,
        "index": "C",
        "name": "The Big Race",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 590,
        "index": "A",
        "name": "Median Smoothing",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 585,
        "index": "B",
        "name": "Phillip and Trains",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 585,
        "index": "A",
        "name": "Gennady the Dentist",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 584,
        "index": "D",
        "name": "Dima and Lisa",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 584,
        "index": "C",
        "name": "Marina and Vasya",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    {
        "contestId": 582,
        "index": "A",
        "name": "GCD Table",
        "type": "PROGRAMMING",
        "points": 750,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "number theory"
        ]
    },
    {
        "contestId": 581,
        "index": "D",
        "name": "Three Logos",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 580,
        "index": "D",
        "name": "Kefa and Dishes",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    {
        "contestId": 578,
        "index": "B",
        "name": "\"Or\" Game",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy"
        ]
    },
    {
        "contestId": 578,
        "index": "A",
        "name": "A Problem about Polyline",
        "type": "PROGRAMMING",
        "points": 250,
        "rating": 1700,
        "tags": [
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 577,
        "index": "B",
        "name": "Modulo Sum",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 575,
        "index": "H",
        "name": "Bots",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "combinatorics",
            "number theory"
        ]
    },
    {
        "contestId": 575,
        "index": "D",
        "name": "Tablecity",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 573,
        "index": "B",
        "name": "Bear and Blocks",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 570,
        "index": "C",
        "name": "Replacement",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 568,
        "index": "B",
        "name": "Symmetric and Transitive",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 568,
        "index": "A",
        "name": "Primes or Palindromes?",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force",
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 567,
        "index": "D",
        "name": "One-Dimensional Battle Ships",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 567,
        "index": "C",
        "name": "Geometric Progression",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ]
    },
    {
        "contestId": 566,
        "index": "D",
        "name": "Restructuring Company",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "data structures",
            "dsu"
        ]
    },
    {
        "contestId": 559,
        "index": "B",
        "name": "Equivalent Strings",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "divide and conquer",
            "hashing",
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 559,
        "index": "A",
        "name": "Gerald's Hexagon",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 558,
        "index": "C",
        "name": "Amr and Chemistry",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "graphs",
            "greedy",
            "math",
            "shortest paths"
        ]
    },
    {
        "contestId": 557,
        "index": "C",
        "name": "Arthur and Table",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 553,
        "index": "B",
        "name": "Kyoya and Permutation",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1900,
        "tags": [
            "binary search",
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 552,
        "index": "D",
        "name": "Vanya and Triangles",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "geometry",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 552,
        "index": "C",
        "name": "Vanya and Scales",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "math",
            "meet-in-the-middle",
            "number theory"
        ]
    },
    {
        "contestId": 551,
        "index": "B",
        "name": "ZgukistringZ",
        "type": "PROGRAMMING",
        "points": 1250,
        "rating": 1800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 550,
        "index": "D",
        "name": "Regular Bridge",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 549,
        "index": "D",
        "name": "Haar Features",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 547,
        "index": "B",
        "name": "Mike and Feet",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "dsu"
        ]
    },
    {
        "contestId": 546,
        "index": "D",
        "name": "Soldier and Number Game",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dp",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 543,
        "index": "A",
        "name": "Writing Code",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 540,
        "index": "D",
        "name": "Bad Luck Island",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp",
            "probabilities"
        ]
    },
    {
        "contestId": 540,
        "index": "B",
        "name": "School Marks",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 538,
        "index": "D",
        "name": "Weird Chess",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 538,
        "index": "C",
        "name": "Tourist's Notes",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 535,
        "index": "D",
        "name": "Tavas and Malekas",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "greedy",
            "hashing",
            "string suffix structures",
            "strings"
        ]
    },
    {
        "contestId": 535,
        "index": "C",
        "name": "Tavas and Karafs",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "binary search",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 534,
        "index": "D",
        "name": "Handshakes",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 534,
        "index": "C",
        "name": "Polycarpus' Dice",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 533,
        "index": "E",
        "name": "Correcting Mistakes",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "hashing",
            "strings",
            "two pointers"
        ]
    },
    {
        "contestId": 533,
        "index": "C",
        "name": "Board Game",
        "type": "PROGRAMMING",
        "points": 250,
        "rating": 1700,
        "tags": [
            "games",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 530,
        "index": "E",
        "name": "Sum and product",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 530,
        "index": "D",
        "name": "Set subtraction",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 530,
        "index": "B",
        "name": "String inside out",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 529,
        "index": "B",
        "name": "Group Photo 2 (online mirror version)",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1900,
        "tags": [
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 527,
        "index": "D",
        "name": "Clique Problem",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 525,
        "index": "C",
        "name": "Ilya and Sticks",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 524,
        "index": "C",
        "name": "The Art of Dealing with ATM",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "sortings"
        ]
    },
    {
        "contestId": 524,
        "index": "B",
        "name": "Фото на память - 2 (round version)",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 524,
        "index": "A",
        "name": "Возможно, вы знаете этих людей?",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 523,
        "index": "D",
        "name": "Statistics of Recompressing Videos",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "*special",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 519,
        "index": "D",
        "name": "A and B and Interesting Substrings",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 518,
        "index": "D",
        "name": "Ilya and Escalator",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 518,
        "index": "C",
        "name": "Anya and Smartphone",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 518,
        "index": "A",
        "name": "Vitaly and Strings",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "strings"
        ]
    },
    {
        "contestId": 513,
        "index": "G1",
        "name": "Inversions problem",
        "type": "PROGRAMMING",
        "points": 3,
        "rating": 1800,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "meet-in-the-middle"
        ]
    },
    {
        "contestId": 513,
        "index": "B2",
        "name": "Permutations",
        "type": "PROGRAMMING",
        "points": 4,
        "rating": 1800,
        "tags": [
            "bitmasks",
            "divide and conquer",
            "math"
        ]
    },
    {
        "contestId": 510,
        "index": "D",
        "name": "Fox And Jumping",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "brute force",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 510,
        "index": "C",
        "name": "Fox And Names",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs",
            "sortings"
        ]
    },
    {
        "contestId": 508,
        "index": "C",
        "name": "Anya and Ghosts",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 507,
        "index": "C",
        "name": "Guess Your Way Out!",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "implementation",
            "math",
            "trees"
        ]
    },
    {
        "contestId": 505,
        "index": "C",
        "name": "Mr. Kitayuta, the Treasure Hunter",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 500,
        "index": "D",
        "name": "New Year Santa Network",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 500,
        "index": "C",
        "name": "New Year Book Reading",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 500,
        "index": "B",
        "name": "New Year Permutation",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 498,
        "index": "A",
        "name": "Crazy Town",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 496,
        "index": "D",
        "name": "Tennis Game",
        "type": "PROGRAMMING",
        "points": 2250,
        "rating": 1900,
        "tags": [
            "binary search"
        ]
    },
    {
        "contestId": 495,
        "index": "B",
        "name": "Modular Equations",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 493,
        "index": "D",
        "name": "Vasya and Chess",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "games",
            "math"
        ]
    },
    {
        "contestId": 493,
        "index": "C",
        "name": "Vasya and Basketball",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 492,
        "index": "D",
        "name": "Vanya and Computer Game",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "implementation",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 490,
        "index": "D",
        "name": "Chocolate",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "brute force",
            "dfs and similar",
            "math",
            "meet-in-the-middle",
            "number theory"
        ]
    },
    {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    {
        "contestId": 489,
        "index": "D",
        "name": "Unbearable Controversy of Being",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 488,
        "index": "B",
        "name": "Candy Boxes",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 487,
        "index": "A",
        "name": "Fight the Monster",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "binary search",
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 486,
        "index": "C",
        "name": "Palindrome Transformation",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 484,
        "index": "A",
        "name": "Bits",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 483,
        "index": "B",
        "name": "Friends and Presents",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 482,
        "index": "B",
        "name": "Interesting Array",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "data structures",
            "trees"
        ]
    },
    {
        "contestId": 479,
        "index": "E",
        "name": "Riding in a Lift",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    {
        "contestId": 479,
        "index": "D",
        "name": "Long Jumps",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 478,
        "index": "C",
        "name": "Table Decorations",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 476,
        "index": "D",
        "name": "Dreamoon and Sets",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 476,
        "index": "C",
        "name": "Dreamoon and Sums",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 474,
        "index": "D",
        "name": "Flowers",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 472,
        "index": "D",
        "name": "Design Tutorial: Inverse the Problem",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dsu",
            "shortest paths",
            "trees"
        ]
    },
    {
        "contestId": 471,
        "index": "D",
        "name": "MUH and Cube Walls",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "string suffix structures",
            "strings"
        ]
    },
    {
        "contestId": 471,
        "index": "C",
        "name": "MUH and House of Cards",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 470,
        "index": "E",
        "name": "Chessboard",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 470,
        "index": "D",
        "name": "Caesar Cipher",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 470,
        "index": "C",
        "name": "Eval",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 470,
        "index": "B",
        "name": "Hexakosioihexekontahexaphobia",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 467,
        "index": "C",
        "name": "George and Job",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 466,
        "index": "C",
        "name": "Number of Ways",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 464,
        "index": "A",
        "name": "No to Palindromes!",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 463,
        "index": "D",
        "name": "Gargari and Permutations",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 463,
        "index": "C",
        "name": "Gargari and Bishops",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "greedy",
            "hashing",
            "implementation"
        ]
    },
    {
        "contestId": 460,
        "index": "C",
        "name": "Present",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 459,
        "index": "E",
        "name": "Pashmak and Graph",
        "type": "PROGRAMMING",
        "points": 3000,
        "rating": 1900,
        "tags": [
            "dp",
            "sortings"
        ]
    },
    {
        "contestId": 459,
        "index": "D",
        "name": "Pashmak and Parmida's problem",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "data structures",
            "divide and conquer",
            "sortings"
        ]
    },
    {
        "contestId": 459,
        "index": "C",
        "name": "Pashmak and Buses",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 457,
        "index": "B",
        "name": "Distributed Join",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 457,
        "index": "A",
        "name": "Golden System",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "math",
            "meet-in-the-middle"
        ]
    },
    {
        "contestId": 455,
        "index": "B",
        "name": "A Lot of Games",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "games",
            "implementation",
            "strings",
            "trees"
        ]
    },
    {
        "contestId": 453,
        "index": "A",
        "name": "Little Pony and Expected Maximum",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "probabilities"
        ]
    },
    {
        "contestId": 452,
        "index": "D",
        "name": "Washer, Dryer, Folder",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 452,
        "index": "B",
        "name": "4-point polyline",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "trees"
        ]
    },
    {
        "contestId": 451,
        "index": "C",
        "name": "Predict Outcome of the Game",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 449,
        "index": "A",
        "name": "Jzzhu and Chocolate",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 448,
        "index": "D",
        "name": "Multiplication Table",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "brute force"
        ]
    },
    {
        "contestId": 448,
        "index": "C",
        "name": "Painting Fence",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "divide and conquer",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 446,
        "index": "A",
        "name": "DZY Loves Sequences",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dp",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 444,
        "index": "A",
        "name": "DZY Loves Physics",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 442,
        "index": "B",
        "name": "Andrey and Problem",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "greedy",
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 442,
        "index": "A",
        "name": "Borya and Hanabi",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 440,
        "index": "C",
        "name": "One-Based Arithmetic",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force",
            "dfs and similar",
            "divide and conquer"
        ]
    },
    {
        "contestId": 440,
        "index": "B",
        "name": "Balancer",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 439,
        "index": "D",
        "name": "Devu and his Brother",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "sortings",
            "ternary search",
            "two pointers"
        ]
    },
    {
        "contestId": 439,
        "index": "C",
        "name": "Devu and Partitioning of the Array",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "number theory"
        ]
    },
    {
        "contestId": 437,
        "index": "D",
        "name": "The Child and Zoo",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dsu",
            "sortings"
        ]
    },
    {
        "contestId": 436,
        "index": "C",
        "name": "Dungeons and Candies",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 435,
        "index": "C",
        "name": "Cardiogram",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 433,
        "index": "C",
        "name": "Ryouko's Memory Note",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "implementation",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 432,
        "index": "C",
        "name": "Prime Swaps",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 431,
        "index": "C",
        "name": "k-Tree",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "dp",
            "implementation",
            "trees"
        ]
    },
    {
        "contestId": 430,
        "index": "A",
        "name": "Points and Segments (easy)",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "sortings"
        ]
    },
    {
        "contestId": 429,
        "index": "B",
        "name": "Working out",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 427,
        "index": "C",
        "name": "Checkposts",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs",
            "two pointers"
        ]
    },
    {
        "contestId": 424,
        "index": "C",
        "name": "Magic Formulas",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 421,
        "index": "D",
        "name": "Bug in Code",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ]
    },
    {
        "contestId": 420,
        "index": "C",
        "name": "Bug in Code",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "graphs",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 420,
        "index": "B",
        "name": "Online Meeting",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 417,
        "index": "D",
        "name": "Cunning Gena",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 416,
        "index": "C",
        "name": "Booking System",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 412,
        "index": "E",
        "name": "E-mail Addresses",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 411,
        "index": "C",
        "name": "Kicker",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 411,
        "index": "B",
        "name": "Multi-core Processor",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 409,
        "index": "F",
        "name": "000001",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 409,
        "index": "E",
        "name": "Dome",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 409,
        "index": "D",
        "name": "Big Data",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 409,
        "index": "C",
        "name": "Magnum Opus",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 409,
        "index": "B",
        "name": "Mysterious Language",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 409,
        "index": "A",
        "name": "The Great Game",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 407,
        "index": "B",
        "name": "Long Path",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 407,
        "index": "A",
        "name": "Triangle",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 405,
        "index": "D",
        "name": "Toy Sum",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 405,
        "index": "C",
        "name": "Unusual Product",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 404,
        "index": "D",
        "name": "Minesweeper 1D",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 404,
        "index": "C",
        "name": "Restore Graph",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "sortings"
        ]
    },
    {
        "contestId": 402,
        "index": "D",
        "name": "Upgrading Array",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 388,
        "index": "B",
        "name": "Fox and Minimal path",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "graphs",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 387,
        "index": "C",
        "name": "George and Number",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 385,
        "index": "C",
        "name": "Bear and Prime Numbers",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 383,
        "index": "A",
        "name": "Milking cows",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 382,
        "index": "C",
        "name": "Arithmetic Progression",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 380,
        "index": "A",
        "name": "Sereja and Prefixes",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force"
        ]
    },
    {
        "contestId": 377,
        "index": "B",
        "name": "Preparing for the Contest",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 377,
        "index": "A",
        "name": "Maze",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dfs and similar"
        ]
    },
    {
        "contestId": 375,
        "index": "B",
        "name": "Maximum Submatrix 2",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 375,
        "index": "A",
        "name": "Divisible by Seven",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 374,
        "index": "C",
        "name": "Inna and Dima",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 373,
        "index": "B",
        "name": "Making Sequences is Fun",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 372,
        "index": "B",
        "name": "Counting Rectangles is Fun",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "divide and conquer",
            "dp"
        ]
    },
    {
        "contestId": 372,
        "index": "A",
        "name": "Counting Kangaroos is Fun",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 371,
        "index": "D",
        "name": "Vessels",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "data structures",
            "dsu",
            "implementation",
            "trees"
        ]
    },
    {
        "contestId": 371,
        "index": "C",
        "name": "Hamburgers",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force"
        ]
    },
    {
        "contestId": 370,
        "index": "C",
        "name": "Mittens",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 369,
        "index": "C",
        "name": "Valera and Elections",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 367,
        "index": "B",
        "name": "Sereja ans Anagrams",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    {
        "contestId": 366,
        "index": "C",
        "name": "Dima and Salad",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 364,
        "index": "A",
        "name": "Matrix",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 363,
        "index": "D",
        "name": "Renting Bikes",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "greedy"
        ]
    },
    {
        "contestId": 362,
        "index": "C",
        "name": "Insertion Sort",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 360,
        "index": "A",
        "name": "Levko and Array Recovery",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 359,
        "index": "C",
        "name": "Prime Number",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 358,
        "index": "D",
        "name": "Dima and Hares",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 356,
        "index": "B",
        "name": "Xenia and Hamming",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 353,
        "index": "C",
        "name": "Find Maximum",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 353,
        "index": "B",
        "name": "Two Heaps",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "implementation",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 351,
        "index": "B",
        "name": "Jeff and Furik",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp",
            "probabilities"
        ]
    },
    {
        "contestId": 351,
        "index": "A",
        "name": "Jeff and Rounding",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 350,
        "index": "C",
        "name": "Bombs",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 349,
        "index": "B",
        "name": "Color the Fence",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 348,
        "index": "A",
        "name": "Mafia",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "binary search",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 346,
        "index": "A",
        "name": "Alice and Bob",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "games",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 343,
        "index": "C",
        "name": "Read Time",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "binary search",
            "greedy",
            "two pointers"
        ]
    },
    {
        "contestId": 343,
        "index": "B",
        "name": "Alternating Current",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "data structures",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 343,
        "index": "A",
        "name": "Rational Resistance",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 342,
        "index": "C",
        "name": "Cupboard and Balloons",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 340,
        "index": "C",
        "name": "Tourist Problem",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 339,
        "index": "D",
        "name": "Xenia and Bit Operations",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "data structures",
            "trees"
        ]
    },
    {
        "contestId": 339,
        "index": "C",
        "name": "Xenia and Weights",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    {
        "contestId": 337,
        "index": "C",
        "name": "Quiz",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "math",
            "matrices",
            "number theory"
        ]
    },
    {
        "contestId": 336,
        "index": "C",
        "name": "Vasily the Bear and Sequence",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "number theory"
        ]
    },
    {
        "contestId": 336,
        "index": "B",
        "name": "Vasily the Bear and Fly",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 335,
        "index": "B",
        "name": "Palindrome",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp"
        ]
    },
    {
        "contestId": 333,
        "index": "B",
        "name": "Chips",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 333,
        "index": "A",
        "name": "Secrets",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 331,
        "index": "B2",
        "name": "Shave Beaver!",
        "type": "PROGRAMMING",
        "points": 70,
        "rating": 1900,
        "tags": [
            "data structures"
        ]
    },
    {
        "contestId": 331,
        "index": "B1",
        "name": "Shave Beaver!",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 328,
        "index": "A",
        "name": "IQ Test",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 327,
        "index": "D",
        "name": "Block Tower",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 327,
        "index": "C",
        "name": "Magic Five",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 325,
        "index": "B",
        "name": "Stadium and Games",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 323,
        "index": "A",
        "name": "Black-and-White Cube",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "constructive algorithms"
        ]
    },
    {
        "contestId": 322,
        "index": "B",
        "name": "Ciel and Flowers",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 321,
        "index": "B",
        "name": "Ciel and Duel",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "dp",
            "flows",
            "greedy"
        ]
    },
    {
        "contestId": 321,
        "index": "A",
        "name": "Ciel and Robot",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "binary search",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 319,
        "index": "B",
        "name": "Psychos in a Line",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 319,
        "index": "A",
        "name": "Malek Dance Club",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 317,
        "index": "A",
        "name": "Perfect Pair",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force"
        ]
    },
    {
        "contestId": 316,
        "index": "G1",
        "name": "Good Substrings",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1700,
        "tags": [
            "hashing",
            "strings"
        ]
    },
    {
        "contestId": 316,
        "index": "B2",
        "name": "EKG",
        "type": "PROGRAMMING",
        "points": 70,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp"
        ]
    },
    {
        "contestId": 314,
        "index": "A",
        "name": "Sereja and Contest",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 309,
        "index": "C",
        "name": "Memory for Arrays",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "bitmasks",
            "greedy"
        ]
    },
    {
        "contestId": 305,
        "index": "C",
        "name": "Ivan and Powers of Two",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 305,
        "index": "B",
        "name": "Continued Fractions",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 305,
        "index": "A",
        "name": "Strange Addition",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 303,
        "index": "B",
        "name": "Rectangle Puzzle II",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 301,
        "index": "A",
        "name": "Yaroslav and Sequence",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 300,
        "index": "C",
        "name": "Beautiful Numbers",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "brute force",
            "combinatorics"
        ]
    },
    {
        "contestId": 297,
        "index": "B",
        "name": "Fish Weight",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 297,
        "index": "A",
        "name": "Parity Game",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 295,
        "index": "B",
        "name": "Greg and Graph",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 294,
        "index": "C",
        "name": "Shaass and Lights",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "number theory"
        ]
    },
    {
        "contestId": 294,
        "index": "B",
        "name": "Shaass and Bookshelf",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 292,
        "index": "E",
        "name": "Copying Data",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "data structures"
        ]
    },
    {
        "contestId": 292,
        "index": "D",
        "name": "Connected Components",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "dsu"
        ]
    },
    {
        "contestId": 291,
        "index": "D",
        "name": "Parallel Programming",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "*special",
            "greedy"
        ]
    },
    {
        "contestId": 291,
        "index": "C",
        "name": "Network Mask",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "*special",
            "bitmasks",
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 290,
        "index": "C",
        "name": "WTF?",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special",
            "graph matchings",
            "implementation",
            "trees"
        ]
    },
    {
        "contestId": 288,
        "index": "C",
        "name": "Polo the Penguin and XOR operation",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 287,
        "index": "B",
        "name": "Pipeline",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "math"
        ]
    },
    {
        "contestId": 285,
        "index": "D",
        "name": "Permutation Sum",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "combinatorics",
            "dp",
            "implementation",
            "meet-in-the-middle"
        ]
    },
    {
        "contestId": 283,
        "index": "B",
        "name": "Cow Program",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs"
        ]
    },
    {
        "contestId": 283,
        "index": "A",
        "name": "Cows and Sequence",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 281,
        "index": "B",
        "name": "Nearest Fraction",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 280,
        "index": "B",
        "name": "Maximum Xor Secondary",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "data structures",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 279,
        "index": "E",
        "name": "Beautiful Decomposition",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp",
            "games",
            "greedy",
            "number theory"
        ]
    },
    {
        "contestId": 279,
        "index": "C",
        "name": "Ladder",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dp",
            "implementation",
            "two pointers"
        ]
    },
    {
        "contestId": 276,
        "index": "D",
        "name": "Little Girl and Maximum XOR",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 275,
        "index": "B",
        "name": "Convex Shape",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    {
        "contestId": 274,
        "index": "B",
        "name": "Zero Tree",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 272,
        "index": "D",
        "name": "Dima and Two Sequences",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 271,
        "index": "D",
        "name": "Good Substrings",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "data structures",
            "strings"
        ]
    },
    {
        "contestId": 269,
        "index": "B",
        "name": "Greenhouse Effect",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 269,
        "index": "A",
        "name": "Magical Boxes",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 263,
        "index": "D",
        "name": "Cycle in Graph",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 261,
        "index": "B",
        "name": "Maxim and Restaurant",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 260,
        "index": "C",
        "name": "Balls and Boxes",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 260,
        "index": "B",
        "name": "Ancient Prophesy",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force",
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 258,
        "index": "B",
        "name": "Little Elephant and Elections",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "combinatorics",
            "dp"
        ]
    },
    {
        "contestId": 257,
        "index": "D",
        "name": "Sum",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 257,
        "index": "C",
        "name": "View Angle",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force",
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 255,
        "index": "D",
        "name": "Mr. Bender and Square",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "binary search",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 254,
        "index": "C",
        "name": "Anagram",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 253,
        "index": "C",
        "name": "Text Editor",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    {
        "contestId": 252,
        "index": "B",
        "name": "Unsorting Array",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "brute force",
            "sortings"
        ]
    },
    {
        "contestId": 251,
        "index": "B",
        "name": "Playing with Permutations",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 250,
        "index": "D",
        "name": "Building Bridge",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "geometry",
            "ternary search",
            "two pointers"
        ]
    },
    {
        "contestId": 250,
        "index": "C",
        "name": "Movie Critics",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 246,
        "index": "D",
        "name": "Colorful Graph",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 246,
        "index": "C",
        "name": "Beauty Pageant",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 245,
        "index": "H",
        "name": "Queries for Number of Palindromes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "hashing",
            "strings"
        ]
    },
    {
        "contestId": 245,
        "index": "C",
        "name": "Game with Coins",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 244,
        "index": "B",
        "name": "Undoubtedly Lucky Numbers",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar"
        ]
    },
    {
        "contestId": 243,
        "index": "A",
        "name": "The Brand New Function",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "bitmasks"
        ]
    },
    {
        "contestId": 242,
        "index": "C",
        "name": "King's Path",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "hashing",
            "shortest paths"
        ]
    },
    {
        "contestId": 241,
        "index": "G",
        "name": "Challenging Balloons",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 238,
        "index": "B",
        "name": "Boring Partition",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 237,
        "index": "C",
        "name": "Primes on Interval",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "number theory",
            "two pointers"
        ]
    },
    {
        "contestId": 235,
        "index": "A",
        "name": "LCM Challenge",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "number theory"
        ]
    },
    {
        "contestId": 234,
        "index": "G",
        "name": "Practice",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "divide and conquer",
            "implementation"
        ]
    },
    {
        "contestId": 234,
        "index": "F",
        "name": "Fence",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 234,
        "index": "E",
        "name": "Champions' League",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 234,
        "index": "D",
        "name": "Cinema",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 232,
        "index": "B",
        "name": "Table",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "combinatorics",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 232,
        "index": "A",
        "name": "Cycles",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "binary search",
            "constructive algorithms",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 231,
        "index": "D",
        "name": "Magic Box",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    {
        "contestId": 231,
        "index": "C",
        "name": "To Add or Not to Add",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 229,
        "index": "C",
        "name": "Triangles",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "graphs",
            "math"
        ]
    },
    {
        "contestId": 229,
        "index": "B",
        "name": "Planets",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 228,
        "index": "E",
        "name": "The Road to Berland is Paved With Good Intentions",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    {
        "contestId": 226,
        "index": "B",
        "name": "Naughty Stone Piles",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 225,
        "index": "C",
        "name": "Barcode",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dp",
            "matrices"
        ]
    },
    {
        "contestId": 225,
        "index": "B",
        "name": "Well-known Numbers",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "number theory"
        ]
    },
    {
        "contestId": 223,
        "index": "C",
        "name": "Partial Sums",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 223,
        "index": "B",
        "name": "Two Strings",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "strings"
        ]
    },
    {
        "contestId": 223,
        "index": "A",
        "name": "Bracket Sequence",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "data structures",
            "expression parsing",
            "implementation"
        ]
    },
    {
        "contestId": 222,
        "index": "E",
        "name": "Decoding Genome",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "dp",
            "matrices"
        ]
    },
    {
        "contestId": 222,
        "index": "D",
        "name": "Olympiad",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 222,
        "index": "C",
        "name": "Reducing Fractions",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "implementation",
            "math",
            "number theory",
            "sortings"
        ]
    },
    {
        "contestId": 220,
        "index": "B",
        "name": "Little Elephant and Array",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "data structures"
        ]
    },
    {
        "contestId": 219,
        "index": "D",
        "name": "Choosing Capital for Treeland",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 219,
        "index": "C",
        "name": "Color Stripe",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 216,
        "index": "D",
        "name": "Spider's Web",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "binary search",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 216,
        "index": "C",
        "name": "Hiring Staff",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 216,
        "index": "B",
        "name": "Forming Teams",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "implementation"
        ]
    },
    {
        "contestId": 215,
        "index": "D",
        "name": "Hot Days",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 214,
        "index": "B",
        "name": "Hometask",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 213,
        "index": "B",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    {
        "contestId": 213,
        "index": "A",
        "name": "Game",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "greedy"
        ]
    },
    {
        "contestId": 209,
        "index": "A",
        "name": "Multicolored Marbles",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "dp",
            "math"
        ]
    },
    {
        "contestId": 208,
        "index": "C",
        "name": "Police Station",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 208,
        "index": "B",
        "name": "Solitaire",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp"
        ]
    },
    {
        "contestId": 207,
        "index": "D9",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "points": 10,
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 207,
        "index": "D7",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "points": 10,
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 207,
        "index": "D5",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "points": 10,
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 207,
        "index": "D1",
        "name": "The Beaver's Problem - 3",
        "type": "PROGRAMMING",
        "points": 10,
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 207,
        "index": "B3",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "points": 50,
        "rating": 1700,
        "tags": []
    },
    {
        "contestId": 207,
        "index": "B2",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1900,
        "tags": []
    },
    {
        "contestId": 207,
        "index": "B1",
        "name": "Military Trainings",
        "type": "PROGRAMMING",
        "points": 20,
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 207,
        "index": "A2",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 207,
        "index": "A1",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "points": 20,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 203,
        "index": "D",
        "name": "Hit Ball",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "geometry",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 202,
        "index": "B",
        "name": "Brand New Easy Problem",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force"
        ]
    },
    {
        "contestId": 201,
        "index": "B",
        "name": "Guess That Car!",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "math",
            "ternary search"
        ]
    },
    {
        "contestId": 201,
        "index": "A",
        "name": "Clear Symmetry",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "dp",
            "math"
        ]
    },
    {
        "contestId": 200,
        "index": "D",
        "name": "Programming Language",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "binary search",
            "brute force",
            "expression parsing",
            "implementation"
        ]
    },
    {
        "contestId": 200,
        "index": "C",
        "name": "Football Championship",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 199,
        "index": "B",
        "name": "Special Olympics",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 198,
        "index": "A",
        "name": "About Bacteria",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 197,
        "index": "A",
        "name": "Plate Game",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "games",
            "math"
        ]
    },
    {
        "contestId": 195,
        "index": "D",
        "name": "Analyzing Polyline",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "geometry",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 195,
        "index": "C",
        "name": "Try and Catch",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "expression parsing",
            "implementation"
        ]
    },
    {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 191,
        "index": "C",
        "name": "Fools and Roads",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ]
    },
    {
        "contestId": 191,
        "index": "B",
        "name": "Demonstration",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 190,
        "index": "D",
        "name": "Non-Secret Cypher",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "two pointers"
        ]
    },
    {
        "contestId": 190,
        "index": "B",
        "name": "Surrounded",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "geometry"
        ]
    },
    {
        "contestId": 188,
        "index": "H",
        "name": "Stack",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "expression parsing",
            "implementation"
        ]
    },
    {
        "contestId": 188,
        "index": "G",
        "name": "Array Sorting",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 187,
        "index": "B",
        "name": "AlgoRace",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dp",
            "shortest paths"
        ]
    },
    {
        "contestId": 185,
        "index": "B",
        "name": "Mushroom Scientists",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "math",
            "ternary search"
        ]
    },
    {
        "contestId": 183,
        "index": "B",
        "name": "Zoo",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    {
        "contestId": 183,
        "index": "A",
        "name": "Headquarters",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 182,
        "index": "E",
        "name": "Wooden Fence",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    {
        "contestId": 180,
        "index": "D",
        "name": "Name",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 180,
        "index": "A",
        "name": "Defragmentation",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 178,
        "index": "F1",
        "name": "Representative Sampling",
        "type": "PROGRAMMING",
        "points": 20,
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 178,
        "index": "E1",
        "name": "The Beaver's Problem - 2",
        "type": "PROGRAMMING",
        "points": 20,
        "rating": 1900,
        "tags": []
    },
    {
        "contestId": 178,
        "index": "D2",
        "name": "Magic Squares",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1900,
        "tags": []
    },
    {
        "contestId": 178,
        "index": "C2",
        "name": "Smart Beaver and Resolving Collisions",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1900,
        "tags": []
    },
    {
        "contestId": 178,
        "index": "C1",
        "name": "Smart Beaver and Resolving Collisions",
        "type": "PROGRAMMING",
        "points": 20,
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 178,
        "index": "B3",
        "name": "Greedy Merchants",
        "type": "PROGRAMMING",
        "points": 50,
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 178,
        "index": "B2",
        "name": "Greedy Merchants",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 178,
        "index": "B1",
        "name": "Greedy Merchants",
        "type": "PROGRAMMING",
        "points": 20,
        "rating": 1600,
        "tags": []
    },
    {
        "contestId": 177,
        "index": "F1",
        "name": "Script Generation",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1800,
        "tags": []
    },
    {
        "contestId": 177,
        "index": "E2",
        "name": "Space Voyage",
        "type": "PROGRAMMING",
        "points": 70,
        "rating": 1900,
        "tags": [
            "binary search"
        ]
    },
    {
        "contestId": 177,
        "index": "E1",
        "name": "Space Voyage",
        "type": "PROGRAMMING",
        "points": 30,
        "rating": 1700,
        "tags": [
            "binary search"
        ]
    },
    {
        "contestId": 176,
        "index": "B",
        "name": "Word Cut",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 175,
        "index": "C",
        "name": "Geometry Horse",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    {
        "contestId": 174,
        "index": "C",
        "name": "Range Increments",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 173,
        "index": "C",
        "name": "Spiral Maximum",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "dp"
        ]
    },
    {
        "contestId": 173,
        "index": "B",
        "name": "Chamber of Secrets",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "shortest paths"
        ]
    },
    {
        "contestId": 171,
        "index": "H",
        "name": "A polyline",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 171,
        "index": "G",
        "name": "Mysterious numbers - 2",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 171,
        "index": "F",
        "name": "ucyhf",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "brute force",
            "implementation",
            "number theory"
        ]
    },
    {
        "contestId": 168,
        "index": "B",
        "name": "Wizards and Minimal Spell",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 167,
        "index": "B",
        "name": "Wizards and Huge Prize",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 167,
        "index": "A",
        "name": "Wizards and Trolleybuses",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 165,
        "index": "C",
        "name": "Another Problem on Strings",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "dp",
            "math",
            "strings",
            "two pointers"
        ]
    },
    {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 163,
        "index": "A",
        "name": "Substring and Subsequence",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 162,
        "index": "J",
        "name": "Brackets",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 162,
        "index": "H",
        "name": "Alternating case",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 162,
        "index": "F",
        "name": "Factorial zeros",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 162,
        "index": "E",
        "name": "HQ9+",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 162,
        "index": "D",
        "name": "Remove digits",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 162,
        "index": "C",
        "name": "Prime factorization",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 162,
        "index": "B",
        "name": "Binary notation",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 161,
        "index": "D",
        "name": "Distance in Tree",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    {
        "contestId": 161,
        "index": "B",
        "name": "Discounts",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 160,
        "index": "C",
        "name": "Find Pair",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "implementation",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 159,
        "index": "E",
        "name": "Zebra Tower",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1700,
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 158,
        "index": "E",
        "name": "Phone Talks",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "*special",
            "dp",
            "sortings"
        ]
    },
    {
        "contestId": 156,
        "index": "B",
        "name": "Suspects",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 156,
        "index": "A",
        "name": "Message",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force"
        ]
    },
    {
        "contestId": 154,
        "index": "B",
        "name": "Colliders",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 154,
        "index": "A",
        "name": "Hometask",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 153,
        "index": "B",
        "name": "Binary notation",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 153,
        "index": "A",
        "name": "A + B",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 150,
        "index": "B",
        "name": "Quantity of Strings",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "graphs",
            "math"
        ]
    },
    {
        "contestId": 149,
        "index": "D",
        "name": "Coloring Brackets",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 149,
        "index": "B",
        "name": "Martian Clock",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 148,
        "index": "E",
        "name": "Porcelain",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 148,
        "index": "D",
        "name": "Bag of mice",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dp",
            "games",
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 148,
        "index": "C",
        "name": "Terse princess",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 145,
        "index": "B",
        "name": "Lucky Number 2",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 144,
        "index": "D",
        "name": "Missile Silos",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 142,
        "index": "B",
        "name": "Help General",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 142,
        "index": "A",
        "name": "Help Farmer",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 141,
        "index": "C",
        "name": "Queue",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 140,
        "index": "D",
        "name": "New Year Contest",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 140,
        "index": "C",
        "name": "New Year Snowmen",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "binary search",
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 140,
        "index": "B",
        "name": "New Year Cards",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 140,
        "index": "A",
        "name": "New Year Table",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 139,
        "index": "B",
        "name": "Wallpaper",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 138,
        "index": "B",
        "name": "Digits Permutations",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 138,
        "index": "A",
        "name": "Literature Lesson",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 137,
        "index": "D",
        "name": "Palindromes",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    {
        "contestId": 135,
        "index": "C",
        "name": "Zero-One",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "games",
            "greedy"
        ]
    },
    {
        "contestId": 135,
        "index": "B",
        "name": "Rectangle and Square",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry",
            "math"
        ]
    },
    {
        "contestId": 134,
        "index": "B",
        "name": "Pairs of Numbers",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "dfs and similar",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 132,
        "index": "C",
        "name": "Logo Turtle",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 131,
        "index": "E",
        "name": "Yet Another Task with Queens",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1700,
        "tags": [
            "sortings"
        ]
    },
    {
        "contestId": 131,
        "index": "D",
        "name": "Subway",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 130,
        "index": "J",
        "name": "Date calculation",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 130,
        "index": "H",
        "name": "Balanced brackets",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 130,
        "index": "G",
        "name": "CAPS LOCK ON",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 130,
        "index": "F",
        "name": "Prime factorization",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 130,
        "index": "E",
        "name": "Tribonacci numbers",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special"
        ]
    },
    {
        "contestId": 126,
        "index": "B",
        "name": "Password",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "binary search",
            "dp",
            "hashing",
            "string suffix structures",
            "strings"
        ]
    },
    {
        "contestId": 126,
        "index": "A",
        "name": "Hot Bath",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1900,
        "tags": [
            "binary search",
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 125,
        "index": "C",
        "name": "Hobbits' Party",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 123,
        "index": "B",
        "name": "Squares",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 121,
        "index": "C",
        "name": "Lucky Permutation",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "combinatorics",
            "number theory"
        ]
    },
    {
        "contestId": 120,
        "index": "J",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "divide and conquer",
            "geometry",
            "sortings"
        ]
    },
    {
        "contestId": 120,
        "index": "H",
        "name": "Brevity is Soul of Wit",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graph matchings"
        ]
    },
    {
        "contestId": 120,
        "index": "G",
        "name": "Boom",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 119,
        "index": "B",
        "name": "Before Exam",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "implementation",
            "sortings"
        ]
    },
    {
        "contestId": 118,
        "index": "D",
        "name": "Caesar's Legions",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 118,
        "index": "C",
        "name": "Fancy Number",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "brute force",
            "greedy",
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 117,
        "index": "B",
        "name": "Very Interesting Game",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "brute force",
            "number theory"
        ]
    },
    {
        "contestId": 113,
        "index": "A",
        "name": "Grammar Lessons",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 111,
        "index": "B",
        "name": "Petya and Divisors",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory"
        ]
    },
    {
        "contestId": 109,
        "index": "C",
        "name": "Lucky Tree",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "dp",
            "dsu",
            "trees"
        ]
    },
    {
        "contestId": 109,
        "index": "B",
        "name": "Lucky Probability",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "brute force",
            "probabilities"
        ]
    },
    {
        "contestId": 107,
        "index": "B",
        "name": "Basketball Team",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 106,
        "index": "D",
        "name": "Treasure Island",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 106,
        "index": "C",
        "name": "Buns",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 105,
        "index": "B",
        "name": "Dark Assembly",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "brute force",
            "probabilities"
        ]
    },
    {
        "contestId": 105,
        "index": "A",
        "name": "Transmigration",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 103,
        "index": "C",
        "name": "Russian Roulette",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 101,
        "index": "B",
        "name": "Buses",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ]
    },
    {
        "contestId": 100,
        "index": "G",
        "name": "Name the album",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 100,
        "index": "F",
        "name": "Polynom",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 100,
        "index": "E",
        "name": "Lamps in a Line",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "math"
        ]
    },
    {
        "contestId": 98,
        "index": "A",
        "name": "Help Victoria the Wise",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 95,
        "index": "C",
        "name": "Volleyball",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "shortest paths"
        ]
    },
    {
        "contestId": 95,
        "index": "B",
        "name": "Lucky Numbers",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 95,
        "index": "A",
        "name": "Hockey",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 93,
        "index": "B",
        "name": "End of Exams",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1900,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 93,
        "index": "A",
        "name": "Frames",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 89,
        "index": "A",
        "name": "Robbery",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 87,
        "index": "B",
        "name": "Vasya and Types",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 86,
        "index": "A",
        "name": "Reflection",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 85,
        "index": "B",
        "name": "Embassy Queue",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    {
        "contestId": 84,
        "index": "C",
        "name": "Biathlon",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "binary search",
            "implementation"
        ]
    },
    {
        "contestId": 83,
        "index": "B",
        "name": "Doctor",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "binary search",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 82,
        "index": "B",
        "name": "Sets",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "hashing",
            "implementation"
        ]
    },
    {
        "contestId": 81,
        "index": "C",
        "name": "Average Score",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    {
        "contestId": 81,
        "index": "B",
        "name": "Sequence Formatting",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 79,
        "index": "C",
        "name": "Beaver",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "hashing",
            "strings",
            "two pointers"
        ]
    },
    {
        "contestId": 77,
        "index": "B",
        "name": "Falling Anvils",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "math",
            "probabilities"
        ]
    },
    {
        "contestId": 76,
        "index": "E",
        "name": "Points",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 76,
        "index": "D",
        "name": "Plus and xor",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 75,
        "index": "C",
        "name": "Modified GCD",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "binary search",
            "number theory"
        ]
    },
    {
        "contestId": 73,
        "index": "C",
        "name": "LionAge II",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 73,
        "index": "A",
        "name": "The Elder Trolls IV: Oblivon",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 72,
        "index": "H",
        "name": "Reverse It!",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    {
        "contestId": 72,
        "index": "F",
        "name": "Oil",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "*special",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 72,
        "index": "E",
        "name": "Ali goes shopping",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "brute force",
            "strings"
        ]
    },
    {
        "contestId": 72,
        "index": "A",
        "name": "Goshtasp, Vishtasp and Eidi",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "greedy",
            "math"
        ]
    },
    {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 70,
        "index": "B",
        "name": "Text Messaging",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "expression parsing",
            "greedy",
            "strings"
        ]
    },
    {
        "contestId": 69,
        "index": "E",
        "name": "Subsegments",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1800,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 69,
        "index": "D",
        "name": "Dot",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp",
            "games"
        ]
    },
    {
        "contestId": 68,
        "index": "B",
        "name": "Energy exchange",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "binary search"
        ]
    },
    {
        "contestId": 67,
        "index": "D",
        "name": "Optical Experiment",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dp"
        ]
    },
    {
        "contestId": 67,
        "index": "B",
        "name": "Restoration of the Permutation",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 67,
        "index": "A",
        "name": "Partial Teacher",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "dp",
            "graphs",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 66,
        "index": "D",
        "name": "Petya and His Friends",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 66,
        "index": "C",
        "name": "Petya and File System",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 65,
        "index": "B",
        "name": "Harry Potter and the History of Magic",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 65,
        "index": "A",
        "name": "Harry Potter and Three Spells",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1800,
        "tags": [
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 64,
        "index": "E",
        "name": "Prime Segment",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "brute force"
        ]
    },
    {
        "contestId": 64,
        "index": "D",
        "name": "Presents",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "*special",
            "greedy"
        ]
    },
    {
        "contestId": 64,
        "index": "C",
        "name": "Table",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "*special",
            "greedy",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 63,
        "index": "D",
        "name": "Dividing Island",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 63,
        "index": "C",
        "name": "Bulls and Cows",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    {
        "contestId": 62,
        "index": "B",
        "name": "Tyndex.Brome",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "binary search",
            "implementation"
        ]
    },
    {
        "contestId": 61,
        "index": "E",
        "name": "Enemy is weak",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "data structures",
            "trees"
        ]
    },
    {
        "contestId": 61,
        "index": "D",
        "name": "Eternal Victory",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    {
        "contestId": 59,
        "index": "C",
        "name": "Title",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1600,
        "tags": [
            "expression parsing"
        ]
    },
    {
        "contestId": 58,
        "index": "C",
        "name": "Trees",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "brute force"
        ]
    },
    {
        "contestId": 57,
        "index": "C",
        "name": "Array",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    {
        "contestId": 57,
        "index": "B",
        "name": "Martian Architecture",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 56,
        "index": "C",
        "name": "Corporation Mail",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "data structures",
            "expression parsing",
            "implementation"
        ]
    },
    {
        "contestId": 55,
        "index": "C",
        "name": "Pie or die",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "games"
        ]
    },
    {
        "contestId": 55,
        "index": "B",
        "name": "Smallest number",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "brute force"
        ]
    },
    {
        "contestId": 54,
        "index": "B",
        "name": "Cutting Jigsaw Puzzle",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "hashing",
            "implementation"
        ]
    },
    {
        "contestId": 53,
        "index": "B",
        "name": "Blog Photo",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "binary search",
            "implementation"
        ]
    },
    {
        "contestId": 52,
        "index": "B",
        "name": "Right Triangles",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "combinatorics"
        ]
    },
    {
        "contestId": 51,
        "index": "C",
        "name": "Three Base Stations",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "binary search",
            "greedy"
        ]
    },
    {
        "contestId": 51,
        "index": "B",
        "name": "bHTML Tables Analisys",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "expression parsing"
        ]
    },
    {
        "contestId": 49,
        "index": "D",
        "name": "Game",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1800,
        "tags": [
            "brute force",
            "dp",
            "implementation"
        ]
    },
    {
        "contestId": 49,
        "index": "C",
        "name": "Disposition",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    {
        "contestId": 48,
        "index": "C",
        "name": "The Race",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 46,
        "index": "E",
        "name": "Comb",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp"
        ]
    },
    {
        "contestId": 46,
        "index": "D",
        "name": "Parking Lot",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    {
        "contestId": 46,
        "index": "C",
        "name": "Hamsters and Tigers",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "two pointers"
        ]
    },
    {
        "contestId": 45,
        "index": "J",
        "name": "Planting Trees",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms"
        ]
    },
    {
        "contestId": 45,
        "index": "D",
        "name": "Event Dates",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "greedy",
            "meet-in-the-middle",
            "sortings"
        ]
    },
    {
        "contestId": 45,
        "index": "C",
        "name": "Dancing Lessons",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures"
        ]
    },
    {
        "contestId": 44,
        "index": "H",
        "name": "Phone Number",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 44,
        "index": "D",
        "name": "Hyperdrive",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 42,
        "index": "B",
        "name": "Game of chess unfinished",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 41,
        "index": "E",
        "name": "3-cycles",
        "type": "PROGRAMMING",
        "points": 2500,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "graphs",
            "greedy"
        ]
    },
    {
        "contestId": 41,
        "index": "D",
        "name": "Pawn",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 40,
        "index": "B",
        "name": "Repaintings",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 38,
        "index": "E",
        "name": "Let's Go Rolling!",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "sortings"
        ]
    },
    {
        "contestId": 38,
        "index": "D",
        "name": "Vasya the Architect",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 37,
        "index": "C",
        "name": "Old Berland Language",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "data structures",
            "greedy",
            "trees"
        ]
    },
    {
        "contestId": 37,
        "index": "B",
        "name": "Computer Game",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    {
        "contestId": 36,
        "index": "B",
        "name": "Fractal",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 35,
        "index": "D",
        "name": "Animals",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1700,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    {
        "contestId": 35,
        "index": "B",
        "name": "Warehouse",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 34,
        "index": "D",
        "name": "Road Map",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    {
        "contestId": 33,
        "index": "C",
        "name": "Wonderful Randomized Sum",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    {
        "contestId": 33,
        "index": "B",
        "name": "String Problem",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1800,
        "tags": [
            "shortest paths"
        ]
    },
    {
        "contestId": 32,
        "index": "D",
        "name": "Constellation",
        "type": "PROGRAMMING",
        "points": 2000,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 32,
        "index": "C",
        "name": "Flea",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 31,
        "index": "C",
        "name": "Schedule",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 30,
        "index": "C",
        "name": "Shooting Gallery",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1800,
        "tags": [
            "dp",
            "probabilities"
        ]
    },
    {
        "contestId": 30,
        "index": "B",
        "name": "Codeforces World Finals",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 29,
        "index": "C",
        "name": "Mail Stamps",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1700,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "implementation"
        ]
    },
    {
        "contestId": 28,
        "index": "B",
        "name": "pSort",
        "type": "PROGRAMMING",
        "points": 1000,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    {
        "contestId": 28,
        "index": "A",
        "name": "Bender Problem",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 27,
        "index": "C",
        "name": "Unordered Subsequence",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    {
        "contestId": 25,
        "index": "D",
        "name": "Roads not only in Berland",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dsu",
            "graphs",
            "trees"
        ]
    },
    {
        "contestId": 25,
        "index": "C",
        "name": "Roads in Berland",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 24,
        "index": "C",
        "name": "Sequence of points",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "geometry",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 23,
        "index": "B",
        "name": "Party",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs",
            "math"
        ]
    },
    {
        "contestId": 22,
        "index": "D",
        "name": "Segments",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 22,
        "index": "C",
        "name": "System Administrator",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "graphs"
        ]
    },
    {
        "contestId": 21,
        "index": "A",
        "name": "Jabber ID",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1900,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 20,
        "index": "C",
        "name": "Dijkstra?",
        "type": "PROGRAMMING",
        "points": 1500,
        "rating": 1900,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    {
        "contestId": 20,
        "index": "A",
        "name": "BerOS file system",
        "type": "PROGRAMMING",
        "points": 500,
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 19,
        "index": "B",
        "name": "Checkout Assistant",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 18,
        "index": "B",
        "name": "Platforms",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "math"
        ]
    },
    {
        "contestId": 16,
        "index": "E",
        "name": "Fish",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dp",
            "probabilities"
        ]
    },
    {
        "contestId": 16,
        "index": "D",
        "name": "Logging",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    {
        "contestId": 16,
        "index": "C",
        "name": "Monitor",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "number theory"
        ]
    },
    {
        "contestId": 15,
        "index": "B",
        "name": "Laser",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 14,
        "index": "E",
        "name": "Camels",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    {
        "contestId": 14,
        "index": "D",
        "name": "Two Paths",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "shortest paths",
            "trees",
            "two pointers"
        ]
    },
    {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    {
        "contestId": 11,
        "index": "B",
        "name": "Jumping Jack",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    {
        "contestId": 9,
        "index": "D",
        "name": "How many trees?",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ]
    },
    {
        "contestId": 7,
        "index": "C",
        "name": "Line",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "math",
            "number theory"
        ]
    },
    {
        "contestId": 7,
        "index": "B",
        "name": "Memory Manager",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation"
        ]
    },
    {
        "contestId": 6,
        "index": "E",
        "name": "Exposition",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dsu",
            "trees",
            "two pointers"
        ]
    },
    {
        "contestId": 5,
        "index": "C",
        "name": "Longest Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dp",
            "greedy",
            "sortings",
            "strings"
        ]
    },
    {
        "contestId": 4,
        "index": "D",
        "name": "Mysterious Present",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dp",
            "sortings"
        ]
    },
    {
        "contestId": 3,
        "index": "C",
        "name": "Tic-tac-toe",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "games",
            "implementation"
        ]
    },
    {
        "contestId": 3,
        "index": "B",
        "name": "Lorry",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    {
        "contestId": 1,
        "index": "B",
        "name": "Spreadsheet",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "implementation",
            "math"
        ]
    }
]